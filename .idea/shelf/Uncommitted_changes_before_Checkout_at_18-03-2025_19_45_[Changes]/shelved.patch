Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.loansmicroservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class LoanAlreadyExistsException extends RuntimeException{
-    public LoanAlreadyExistsException(String message){
-        super(message);
-    }
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-package com.micronauticals.loansmicroservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-    public ResourceNotFoundException(String resourceName, String fieldName, Object fieldValue) {
-        super(String.format("%s not found with %s : '%s'", resourceName, fieldName, fieldValue));
-    }
-}
Index: V2_Cloud_Config/LoansMicroservice/pom.xml
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/pom.xml b/V2_Cloud_Config/LoansMicroservice/pom.xml
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,126 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.3</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>loansmicroservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <name>loansmicroservice</name>
-    <description>loansmicroservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-        <spring-cloud.version>2024.0.0</spring-cloud.version>
-    </properties>
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>org.springframework.cloud</groupId>
-                <artifactId>spring-cloud-dependencies</artifactId>
-                <version>${spring-cloud.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-validation</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-annotations</artifactId>
-            <version>2.1.10</version>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-config</artifactId>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: V2_Cloud_Config/Accounts_Microservice/pom.xml
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/pom.xml b/V2_Cloud_Config/Accounts_Microservice/pom.xml
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,149 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.2</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>Accounts_Microservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>SpringBootMicroservice</name>
-    <description>SpringBootMicroservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-        <spring-cloud.version>2024.0.0</spring-cloud.version>
-    </properties>
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>org.springframework.cloud</groupId>
-                <artifactId>spring-cloud-dependencies</artifactId>
-                <version>${spring-cloud.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-    <dependencies>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springdoc</groupId>
-            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
-            <version>2.8.5</version>
-        </dependency>
-
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <version>2.3.232</version>
-            <scope>runtime</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>jakarta.persistence</groupId>
-            <artifactId>jakarta.persistence-api</artifactId>
-            <version>3.1.0</version>
-        </dependency>
-
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-validation</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.jetbrains</groupId>
-            <artifactId>annotations</artifactId>
-            <version>26.0.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-config</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
-        </dependency>
-
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <image>
-                        <name>prabal864/java-spring:Account</name>
-                    </image>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-package com.micronauticals.loansmicroservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-    public ResourceNotFoundException(String resourceName, String fieldName, Object fieldValue) {
-        super(String.format("%s not found with %s : '%s'", resourceName, fieldName, fieldValue));
-    }
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-
-    public ResourceNotFoundException(String resourceName, String fieldName, String fieldValue){
-        super(String.format("%s not found with the given input data %s : '%s'", resourceName, fieldName, fieldValue));
-    }
-}
Index: V2_Cloud_Config/cards_microservice/.gitignore
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/.gitignore b/V2_Cloud_Config/cards_microservice/.gitignore
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_qa.yaml
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_qa.yaml b/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_qa.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-accounts:
-  message: "Welcome to QA environment Accounts Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/dto/CardsContactInfoDto.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/dto/CardsContactInfoDto.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/dto/CardsContactInfoDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/dto/CardsContactInfoDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-
-import lombok.Getter;
-import lombok.Setter;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-import java.util.List;
-import java.util.Map;
-
-@ConfigurationProperties(prefix = "cards")
-@Getter
-@Setter
-public class CardsContactInfoDto {
-    private String message;
-    private Map<String, String> contactDetails;
-    private List<String> onCallSupport;
-}
-
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class CustomerAlreadyExistsException extends RuntimeException {
-    public CustomerAlreadyExistsException(String message) {
-        super(message);
-    }
-}
Index: V1/Accounts_Microservice/pom.xml
===================================================================
diff --git a/V1/Accounts_Microservice/pom.xml b/V1/Accounts_Microservice/pom.xml
deleted file mode 100644
--- a/V1/Accounts_Microservice/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,127 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.2</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>Accounts_Microservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>SpringBootMicroservice</name>
-    <description>SpringBootMicroservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-    </properties>
-    <dependencies>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springdoc</groupId>
-            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
-            <version>2.8.5</version>
-        </dependency>
-
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <version>2.3.232</version>
-            <scope>runtime</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>jakarta.persistence</groupId>
-            <artifactId>jakarta.persistence-api</artifactId>
-            <version>3.1.0</version>
-        </dependency>
-
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-validation</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.jetbrains</groupId>
-            <artifactId>annotations</artifactId>
-            <version>26.0.1</version>
-            <scope>compile</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <image>
-                        <name>prabal864/java-spring:Account</name>
-                    </image>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: V1/cards_microservice/.gitignore
===================================================================
diff --git a/V1/cards_microservice/.gitignore b/V1/cards_microservice/.gitignore
deleted file mode 100644
--- a/V1/cards_microservice/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,164 +0,0 @@
-package com.micronauticals.cards_microservice.controller;
-
-import com.micronauticals.cards_microservice.constants.CardsConstants;
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.dto.ErrorResponseDto;
-import com.micronauticals.cards_microservice.dto.ResponseDto;
-import com.micronauticals.cards_microservice.service.ICardsService;
-import io.swagger.v3.oas.annotations.Operation;
-import io.swagger.v3.oas.annotations.media.Content;
-import io.swagger.v3.oas.annotations.media.Schema;
-import io.swagger.v3.oas.annotations.responses.ApiResponse;
-import io.swagger.v3.oas.annotations.responses.ApiResponses;
-import io.swagger.v3.oas.annotations.tags.Tag;
-import jakarta.validation.Valid;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-/**
- * @author Eazy Bytes
- */
-
-@Tag(
-        name = "CRUD REST APIs for Cards in EazyBank",
-        description = "CRUD REST APIs in EazyBank to CREATE, UPDATE, FETCH AND DELETE card details"
-)
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-@AllArgsConstructor
-@Validated
-public class CardsController {
-
-    private ICardsService iCardsService;
-
-    @Operation(
-            summary = "Create Card REST API",
-            description = "REST API to create new Card inside EazyBank"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "201",
-                    description = "HTTP Status CREATED"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PostMapping("/create")
-    public ResponseEntity<ResponseDto> createCard(@Valid @RequestParam
-                                                  @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                  String mobileNumber) {
-        iCardsService.createCard(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(CardsConstants.STATUS_201, CardsConstants.MESSAGE_201));
-    }
-
-    @Operation(
-            summary = "Fetch Card Details REST API",
-            description = "REST API to fetch card details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @GetMapping("/fetch")
-    public ResponseEntity<CardsDto> fetchCardDetails(@RequestParam
-                                                     @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                     String mobileNumber) {
-        CardsDto cardsDto = iCardsService.fetchCard(mobileNumber);
-        return ResponseEntity.status(HttpStatus.OK).body(cardsDto);
-    }
-
-    @Operation(
-            summary = "Update Card Details REST API",
-            description = "REST API to update card details based on a card number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @PutMapping("/update")
-    public ResponseEntity<ResponseDto> updateCardDetails(@Valid @RequestBody CardsDto cardsDto) {
-        boolean isUpdated = iCardsService.updateCard(cardsDto);
-        if(isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(CardsConstants.STATUS_200, CardsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(CardsConstants.STATUS_417, CardsConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @Operation(
-            summary = "Delete Card Details REST API",
-            description = "REST API to delete Card details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @DeleteMapping("/delete")
-    public ResponseEntity<ResponseDto> deleteCardDetails(@RequestParam
-                                                         @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                         String mobileNumber) {
-        boolean isDeleted = iCardsService.deleteCard(mobileNumber);
-        if(isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(CardsConstants.STATUS_200, CardsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(CardsConstants.STATUS_417, CardsConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/resources/application.yaml
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/resources/application.yaml b/V2_Cloud_Config/cards_microservice/src/main/resources/application.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,40 +0,0 @@
-server:
-  port: 8083
-spring:
-  application:
-    name: "cards"
-
-  config:
-    import: "optional:configserver:http://configserver:8084/"
-
-
-  profiles:
-    active: qa
-
-  datasource:
-    url: jdbc:h2:mem:testdb
-    driverClassName: org.h2.Driver
-    username: sa
-    password: ''
-
-  h2:
-    console:
-      enabled: true
-
-  jpa:
-    database-platform: org.hibernate.dialect.H2Dialect
-    hibernate:
-      ddl-auto: update
-    show-sql: true
-
-  rabbitmq:
-    host: "rabbit"
-    port: 5672
-    username: "guest"
-    password: "guest"
-
-management:
-  endpoints:
-    web:
-      exposure:
-        include: "*"
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,26 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import jakarta.validation.constraints.*;
-import lombok.Data;
-
-
-/**
- * The type Customer dto.
- */
-@Data
-public class CustomerDto {
-
-    @NotEmpty(message = "Name is required")
-    @Size(min=5,max=30, message = "Name should be between 5 to 30 characters")
-    private String name;
-
-    @NotNull(message = "Email is required")
-    @Email
-    private String email;
-
-    @NotEmpty(message = "Mobile number is required")
-    @Pattern(regexp = "(^$|[0-9]{10})", message = "Mobile number is invalid")
-    private String mobileNumber;
-
-    private AccountsDto accountsDto;
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/constants/CardsConstants.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/constants/CardsConstants.java b/src/main/java/com/micronauticals/cards_microservice/constants/CardsConstants.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/constants/CardsConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.cards_microservice.constants;
-
-public class CardsConstants {
-    private CardsConstants() {
-        // restrict instantiation
-    }
-
-    public static final String  CREDIT_CARD = "Credit Card";
-    public static final int  NEW_CARD_LIMIT = 1_00_000;
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Card created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-}
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-prod.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-prod.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-prod.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-
-build:
-  version: "0.0.3"
-
-accounts:
-  message: "Welcome to PRODUCTION-1 environment Accounts Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,20 +0,0 @@
-package com.micronauticals.cards_microservice.audit;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-
-import java.util.Optional;
-
-@Component("auditAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-
-    /**
-     * Returns the current auditor of the application.
-     *
-     * @return the current auditor.
-     */
-    @Override
-    public Optional<String> getCurrentAuditor() {
-        return Optional.of("CARDS_MS");
-    }
-
-}
\ No newline at end of file
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.loansmicroservice.repository;
-
-import com.micronauticals.loansmicroservice.entity.Loans;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-import java.util.Optional;
-
-
-@Repository
-public interface LoansRepository extends JpaRepository<Loans, Long> {
-
-    Optional<Loans> findByMobileNumber(String mobileNumber);
-
-    Optional<Loans> findByLoanNumber(String loanNumber);
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,107 +0,0 @@
-package com.micronauticals.springbootmicroservice.controllers;
-import com.micronauticals.springbootmicroservice.constants.AccountsConstants;
-import com.micronauticals.springbootmicroservice.dto.AccountsContactInfoDto;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.dto.ResponseDto;
-import com.micronauticals.springbootmicroservice.service.IAccountsService;
-import jakarta.validation.Valid;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.beans.factory.annotation.Value;
-import org.springframework.core.env.Environment;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-import java.util.List;
-import java.util.Map;
-
-@Validated
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-public class AccountsController {
-
-    private final IAccountsService iAccountsService;
-
-    private final Environment environment;
-
-    private final AccountsContactInfoDto accountsContactInfoDto;
-
-    public AccountsController(IAccountsService iAccountsService, Environment environment, AccountsContactInfoDto accountsContactInfoDto) {
-        this.iAccountsService = iAccountsService;
-        this.environment = environment;
-        this.accountsContactInfoDto = accountsContactInfoDto;
-    }
-
-    @Value("${build.version}")
-    private String buildVersion;
-
-    @PostMapping("/createAccount")
-    public ResponseEntity<ResponseDto> createAccount(@Valid @RequestBody CustomerDto customerDto) {
-        iAccountsService.createAccount(customerDto);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(AccountsConstants.STATUS_201, "Account created successfully"));
-    }
-
-    @GetMapping("/fetchAccountDetails")
-    public ResponseEntity<CustomerDto> fetchAccountDetails(@RequestParam String mobileNumber) {
-        CustomerDto customerDto = iAccountsService.fetchAccount(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(customerDto);
-    }
-
-    @PutMapping("/updateAccount")
-    public ResponseEntity<ResponseDto> updateAccountDetails(@Valid @RequestBody CustomerDto customerDto) {
-        boolean isUpdated = iAccountsService.updateAccount(customerDto);
-        if (isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(AccountsConstants.STATUS_200, AccountsConstants.MESSAGE_200));
-        } else {
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(AccountsConstants.STATUS_417, AccountsConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @DeleteMapping("/deleteAccount")
-    public ResponseEntity<ResponseDto> deleteAccount(@RequestParam
-                                                     String mobileNumber) {
-        boolean isDeleted = iAccountsService.deleteAccount(mobileNumber);
-        if (isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(AccountsConstants.STATUS_200, AccountsConstants.MESSAGE_200));
-        } else {
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(AccountsConstants.STATUS_417, AccountsConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-    @GetMapping("/buildInfo")
-    public ResponseEntity<String> getBuildInfo() {
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(buildVersion);
-
-    }
-
-    @GetMapping("/environment")
-    public ResponseEntity<String> getEnvironment() {
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(environment.getProperty("MAVEN_HOME"));
-    }
-
-    @GetMapping("/contact")
-    public ResponseEntity<AccountsContactInfoDto> getContactInfo() {
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(accountsContactInfoDto);
-    }
-
-}
Index: V2_Cloud_Config/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java b/V2_Cloud_Config/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cards_microservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class CardsMicroserviceApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V1/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java
===================================================================
diff --git a/V1/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java b/V1/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java
deleted file mode 100644
--- a/V1/cards_microservice/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cards_microservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class CardsMicroserviceApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,106 +0,0 @@
-package com.micronauticals.springbootmicroservice.controllers;
-import com.micronauticals.springbootmicroservice.constants.AccountsConstants;
-import com.micronauticals.springbootmicroservice.dto.AccountsContactInfoDto;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.dto.ResponseDto;
-import com.micronauticals.springbootmicroservice.service.IAccountsService;
-import jakarta.validation.Valid;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.beans.factory.annotation.Value;
-import org.springframework.core.env.Environment;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-import java.util.List;
-import java.util.Map;
-
-@Validated
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-public class AccountsController {
-
-    private final IAccountsService iAccountsService;
-
-    private final Environment environment;
-
-    private final AccountsContactInfoDto accountsContactInfoDto;
-
-    public AccountsController(IAccountsService iAccountsService, Environment environment, AccountsContactInfoDto accountsContactInfoDto) {
-        this.iAccountsService = iAccountsService;
-        this.environment = environment;
-        this.accountsContactInfoDto = accountsContactInfoDto;
-    }
-
-    @Value("${build.version}")
-    private String buildVersion;
-
-    @PostMapping("/createAccount")
-    public ResponseEntity<ResponseDto> createAccount(@Valid @RequestBody CustomerDto customerDto) {
-        iAccountsService.createAccount(customerDto);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(AccountsConstants.STATUS_201, "Account created successfully"));
-    }
-
-    @GetMapping("/fetchAccountDetails")
-    public ResponseEntity<CustomerDto> fetchAccountDetails(@RequestParam String mobileNumber) {
-        CustomerDto customerDto = iAccountsService.fetchAccount(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(customerDto);
-    }
-
-    @PutMapping("/updateAccount")
-    public ResponseEntity<ResponseDto> updateAccountDetails(@Valid @RequestBody CustomerDto customerDto) {
-        boolean isUpdated = iAccountsService.updateAccount(customerDto);
-        if (isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(AccountsConstants.STATUS_200, AccountsConstants.MESSAGE_200));
-        } else {
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(AccountsConstants.STATUS_417, AccountsConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @DeleteMapping("/deleteAccount")
-    public ResponseEntity<ResponseDto> deleteAccount(@RequestParam
-                                                     String mobileNumber) {
-        boolean isDeleted = iAccountsService.deleteAccount(mobileNumber);
-        if (isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(AccountsConstants.STATUS_200, AccountsConstants.MESSAGE_200));
-        } else {
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(AccountsConstants.STATUS_417, AccountsConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-    @GetMapping("/buildInfo")
-    public ResponseEntity<String> getBuildInfo() {
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(buildVersion);
-    }
-
-    @GetMapping("/environment")
-    public ResponseEntity<String> getEnvironment() {
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(environment.getProperty("MAVEN_HOME"));
-    }
-
-    @GetMapping("/contact")
-    public ResponseEntity<AccountsContactInfoDto> getContactInfo() {
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(accountsContactInfoDto);
-    }
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.cards_microservice.repository;
-
-import com.micronauticals.cards_microservice.entity.Cards;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-import java.util.Optional;
-
-@Repository
-public interface CardsRepository extends JpaRepository<Cards, Long> {
-
-    Optional<Cards> findByMobileNumber(String mobileNumber);
-
-    Optional<Cards> findByCardNumber(String cardNumber);
-
-}
\ No newline at end of file
Index: src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java b/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.springbootmicroservice.repository;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-import jakarta.transaction.Transactional;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.data.jpa.repository.Modifying;
-
-import java.util.Optional;
-
-
-public interface AccountsRepository extends JpaRepository<Accounts, Long> {
-       Optional<Accounts> findByCustomerId(Long customerId);
-
-       @Transactional
-       @Modifying
-       void deleteByCustomerId(Long customerId);
-
-}
Index: .mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/.mvn/wrapper/maven-wrapper.properties b/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.springbootmicroservice.repository;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-import jakarta.transaction.Transactional;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.data.jpa.repository.Modifying;
-
-import java.util.Optional;
-
-
-public interface AccountsRepository extends JpaRepository<Accounts, Long> {
-       Optional<Accounts> findByCustomerId(Long customerId);
-
-       @Transactional
-       @Modifying
-       void deleteByCustomerId(Long customerId);
-
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,54 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import jakarta.validation.constraints.Positive;
-import jakarta.validation.constraints.PositiveOrZero;
-import lombok.*;
-import io.swagger.v3.oas.annotations.media.Schema;
-
-@Schema(name = "Loans",
-        description = "Schema to hold Loan information"
-)
-@Data
-public class LoansDto {
-
-    @NotEmpty(message = "Mobile Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile Number must be 10 digits")
-    @Schema(
-            description = "Mobile Number of Customer", example = "4365327698"
-    )
-    private String mobileNumber;
-
-    @NotEmpty(message = "Loan Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{12})",message = "LoanNumber must be 12 digits")
-    @Schema(
-            description = "Loan Number of the customer", example = "548732457654"
-    )
-    private String loanNumber;
-
-    @NotEmpty(message = "LoanType can not be a null or empty")
-    @Schema(
-            description = "Type of the loan", example = "Home Loan"
-    )
-    private String loanType;
-
-    @Positive(message = "Total loan amount should be greater than zero")
-    @Schema(
-            description = "Total loan amount", example = "100000"
-    )
-    private int totalLoan;
-
-    @PositiveOrZero(message = "Total loan amount paid should be equal or greater than zero")
-    @Schema(
-            description = "Total loan amount paid", example = "1000"
-    )
-    private int amountPaid;
-
-    @PositiveOrZero(message = "Total outstanding amount should be equal or greater than zero")
-    @Schema(
-            description = "Total outstanding amount against a loan", example = "99000"
-    )
-    private int outstandingAmount;
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-
-import lombok.*;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data
-@Setter
-@Getter
-@AllArgsConstructor
-@NoArgsConstructor
-public class ErrorResponseDto {
-    private String apiPath;
-    private HttpStatus errorCode;
-    private String errorMessage;
-    private LocalDateTime errorTime;
-
-}
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/cards-prod.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/cards-prod.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/cards-prod.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/cards-prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-cards:
-  message: "Welcome to PRODUCTION-1 environment Cards Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,32 +0,0 @@
-package com.micronauticals.loansmicroservice.service;
-
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-
-public interface ILoansService {
-    /**
-     *
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    void createLoan(String mobileNumber);
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     *  @return Loan Details based on a given mobileNumber
-     */
-    LoansDto fetchLoan(String mobileNumber);
-
-    /**
-     *
-     * @param loansDto - LoansDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    boolean updateLoan(LoansDto loansDto);
-
-    /**
-     *
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of loan details is successful or not
-     */
-    boolean deleteLoan(String mobileNumber);
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-import jakarta.persistence.*;
-import lombok.*;
-
-
-@Entity
-@Getter@Setter@ToString@AllArgsConstructor@NoArgsConstructor
-public class Customer extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long customerId;
-    private String name;
-    private String email;
-    private String mobileNumber;
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansContactInfoDto.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansContactInfoDto.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansContactInfoDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansContactInfoDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import lombok.Getter;
-import lombok.Setter;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-import java.util.List;
-import java.util.Map;
-
-@ConfigurationProperties(prefix = "accounts")
-@Getter
-@Setter
-public class LoansContactInfoDto {
-    private String message;
-    private Map<String, String> contactDetails;
-    private List<String> onCallSupport;
-}
Index: V2_Cloud_Config/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties b/V2_Cloud_Config/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,30 +0,0 @@
-package com.micronauticals.cards_microservice.entity;
-
-import jakarta.persistence.*;
-import lombok.*;
-
-@Entity
-@Getter
-@Setter
-@ToString
-@AllArgsConstructor
-@NoArgsConstructor
-public class Cards extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long cardId;
-
-    private String mobileNumber;
-
-    private String cardNumber;
-
-    private String cardType;
-
-    private int totalLimit;
-
-    private int amountUsed;
-
-    private int availableAmount;
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class CardAlreadyExistsException extends RuntimeException {
-
-    public CardAlreadyExistsException(String message){
-        super(message);
-    }
-
-}
\ No newline at end of file
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/CardAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class CardAlreadyExistsException extends RuntimeException {
-
-    public CardAlreadyExistsException(String message){
-        super(message);
-    }
-
-}
\ No newline at end of file
Index: V2_Cloud_Config/Accounts_Microservice/src/main/resources/application.yaml
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application.yaml b/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,44 +0,0 @@
-server:
-  port: 8081
-
-spring:
-    application:
-      name: "accounts"
-
-    config:
-      import: "optional:configserver:http://configserver:8084/"
-
-    profiles:
-      active: "prod"
-
-    datasource:
-        url: jdbc:h2:mem:springbootdb
-        username: sa
-        password: ''
-        driver-class-name: org.h2.Driver
-
-    jpa:
-        hibernate:
-          ddl-auto: update
-        show-sql: true
-        properties:
-          hibernate:
-            transaction:
-              jta:
-                platform: org.hibernate.service.jta.platform.internal.NoJtaPlatform
-
-    h2:
-        console:
-          enabled: true
-
-    rabbitmq:
-      host: "rabbit"
-      port: 5672
-      username: "guest"
-      password: "guest"
-
-management:
-  endpoints:
-    web:
-      exposure:
-        include: "*"
Index: src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java b/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.springbootmicroservice.audit;
-import org.jetbrains.annotations.NotNull;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-import java.util.Optional;
-
-
-@Component("auditAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-
-    @Override
-    public @NotNull Optional<String> getCurrentAuditor() {
-        return Optional.of("ACCOUNTS_MS");
-    }
-
-}
Index: src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java
===================================================================
diff --git a/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java b/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java
deleted file mode 100644
--- a/src/test/java/com/micronauticals/cards_microservice/CardsMicroserviceApplicationTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cards_microservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class CardsMicroserviceApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/resources/application.yaml
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/resources/application.yaml b/V2_Cloud_Config/LoansMicroservice/src/main/resources/application.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,41 +0,0 @@
-spring:
-  datasource:
-    driver-class-name: org.h2.Driver
-    url: jdbc:h2:mem:testdb
-    username: sa
-    password: ''
-
-  application:
-    name: "loans"
-
-  config:
-    import: "optional:configserver:http://configserver:8084/"
-
-  profiles:
-    active: "prod"
-
-  h2:
-    console:
-      enabled: true
-
-  jpa:
-    database-platform: org.hibernate.dialect.H2Dialect
-    hibernate:
-      ddl-auto: update
-    show-sql: true
-
-  rabbitmq:
-    host: "rabbit"
-    port: 5672
-    username: "guest"
-    password: "guest"
-
-server:
-  port: 8082
-
-
-management:
-  endpoints:
-    web:
-      exposure:
-        include: "*"
Index: V2_Cloud_Config/cloud_config/src/main/resources/application.properties
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/application.properties b/V2_Cloud_Config/cloud_config/src/main/resources/application.properties
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/application.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,1 +0,0 @@
-spring.application.name=cloud_config
Index: V1/Accounts_Microservice/.gitignore
===================================================================
diff --git a/V1/Accounts_Microservice/.gitignore b/V1/Accounts_Microservice/.gitignore
deleted file mode 100644
--- a/V1/Accounts_Microservice/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: .gitignore
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/LoanAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.loansmicroservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class LoanAlreadyExistsException extends RuntimeException{
-    public LoanAlreadyExistsException(String message){
-        super(message);
-    }
-}
Index: README.md
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,1 +0,0 @@
-# SpringBootProject
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-import jakarta.persistence.*;
-import lombok.*;
-
-
-@Entity
-@Getter@Setter@ToString@AllArgsConstructor@NoArgsConstructor
-public class Customer extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long customerId;
-    private String name;
-    private String email;
-    private String mobileNumber;
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-package com.micronauticals.springbootmicroservice.mapper;
-
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-
-public class CustomerMapper {
-
-    public static CustomerDto mapToCustomerDto(Customer customer, CustomerDto customerDto){
-        customerDto.setName(customer.getName());
-        customerDto.setEmail(customer.getEmail());
-        customerDto.setMobileNumber(customer.getMobileNumber());
-        return customerDto;
-    }
-
-    public static Customer mapToCustomer(CustomerDto customerDto,Customer customer ){
-        customer.setName(customerDto.getName());
-        customer.setEmail(customerDto.getEmail());
-        customer.setMobileNumber(customerDto.getMobileNumber());
-        return customer;
-    }
-
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/README.md
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/README.md b/V2_Cloud_Config/Accounts_Microservice/README.md
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/README.md	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,1 +0,0 @@
-# SpringBootProject
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/loans-prod.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/loans-prod.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/loans-prod.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/loans-prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-loans:
-  message: "Welcome to PRODUCTION-1 environment Loans Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java b/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,26 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import jakarta.validation.constraints.*;
-import lombok.Data;
-
-
-/**
- * The type Customer dto.
- */
-@Data
-public class CustomerDto {
-
-    @NotEmpty(message = "Name is required")
-    @Size(min=5,max=30, message = "Name should be between 5 to 30 characters")
-    private String name;
-
-    @NotNull(message = "Email is required")
-    @Email
-    private String email;
-
-    @NotEmpty(message = "Mobile number is required")
-    @Pattern(regexp = "(^$|[0-9]{10})", message = "Mobile number is invalid")
-    private String mobileNumber;
-
-    private AccountsDto accountsDto;
-
-}
Index: V1/Accounts_Microservice/src/main/resources/application_qa.yaml
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/resources/application_qa.yaml b/V1/Accounts_Microservice/src/main/resources/application_qa.yaml
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/resources/application_qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-accounts:
-  message: "Welcome to QA environment Accounts Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-
-
-import jakarta.persistence.Entity;
-import jakarta.persistence.Id;
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-import lombok.NoArgsConstructor;
-import lombok.Setter;
-
-
-@Entity
-@Getter@Setter@NoArgsConstructor@AllArgsConstructor
-public class Accounts extends BaseEntity {
-
-    private Long customerId;
-    @Id
-    private Long accountNumber;
-    private String accountType;
-    private String branchAddress;
-
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java b/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/entity/Customer.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-import jakarta.persistence.*;
-import lombok.*;
-
-
-@Entity
-@Getter@Setter@ToString@AllArgsConstructor@NoArgsConstructor
-public class Customer extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long customerId;
-    private String name;
-    private String email;
-    private String mobileNumber;
-
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.loansmicroservice.entity;
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Getter;
-import lombok.Setter;
-import lombok.ToString;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-
-import java.time.LocalDateTime;
-
-
-@MappedSuperclass
-@Getter@Setter@ToString
-@EntityListeners(AuditingEntityListener.class)
-public class BaseEntity {
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedBy
-    @Column(updatable = false)
-    private String updatedBy;
-
-    @CreatedDate
-    @Column(updatable = false)
-    private LocalDateTime createdDate;
-
-    @LastModifiedDate
-    @Column(updatable = false)
-    private LocalDateTime updatedDate;
-
-}
Index: pom.xml
===================================================================
diff --git a/pom.xml b/pom.xml
deleted file mode 100644
--- a/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,115 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.3</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>cards_microservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>cards_microservice</name>
-    <description>cards_microservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-    </properties>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.jetbrains</groupId>
-            <artifactId>annotations</artifactId>
-            <version>26.0.1</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>jakarta.validation</groupId>
-            <artifactId>jakarta.validation-api</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-annotations-jakarta</artifactId>
-            <version>2.2.28</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-    </dependencies>
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <image>
-                        <name>prabal864/java-spring:Cards</name>
-                    </image>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-</project>
Index: src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java b/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Data;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-import org.springframework.stereotype.Component;
-import java.time.LocalDateTime;
-
-
-@MappedSuperclass
-@Component
-@Data
-@EntityListeners(AuditingEntityListener.class)
-public class BaseEntity {
-
-    @Column(updatable = false)
-    @CreatedDate
-    private LocalDateTime createdAt;
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedDate
-    @Column(insertable = false)
-    private LocalDateTime updatedAt;
-
-    @LastModifiedBy
-    @Column(insertable = false)
-    private String updatedBy;
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Data;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-import org.springframework.stereotype.Component;
-import java.time.LocalDateTime;
-
-
-@MappedSuperclass
-@Component
-@Data
-@EntityListeners(AuditingEntityListener.class)
-public class BaseEntity {
-
-    @Column(updatable = false)
-    @CreatedDate
-    private LocalDateTime createdAt;
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedDate
-    @Column(insertable = false)
-    private LocalDateTime updatedAt;
-
-    @LastModifiedBy
-    @Column(insertable = false)
-    private String updatedBy;
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data @AllArgsConstructor
-@Schema(
-        name = "ErrorResponse",
-        description = "Schema to hold error response information"
-)
-public class ErrorResponseDto {
-
-    @Schema(
-            description = "API path invoked by client"
-    )
-    private  String apiPath;
-
-    @Schema(
-            description = "Error code representing the error happened"
-    )
-    private HttpStatus errorCode;
-
-    @Schema(
-            description = "Error message representing the error happened"
-    )
-    private  String errorMessage;
-
-    @Schema(
-            description = "Time representing when the error happened"
-    )
-    private LocalDateTime errorTime;
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java b/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-
-
-import jakarta.persistence.Entity;
-import jakarta.persistence.Id;
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-import lombok.NoArgsConstructor;
-import lombok.Setter;
-
-
-@Entity
-@Getter@Setter@NoArgsConstructor@AllArgsConstructor
-public class Accounts extends BaseEntity {
-
-    private Long customerId;
-    @Id
-    private Long accountNumber;
-    private String accountType;
-    private String branchAddress;
-
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/repository/CardsRepository.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/repository/CardsRepository.java b/src/main/java/com/micronauticals/cards_microservice/repository/CardsRepository.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/repository/CardsRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.cards_microservice.repository;
-
-import com.micronauticals.cards_microservice.entity.Cards;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-import java.util.Optional;
-
-@Repository
-public interface CardsRepository extends JpaRepository<Cards, Long> {
-
-    Optional<Cards> findByMobileNumber(String mobileNumber);
-
-    Optional<Cards> findByCardNumber(String cardNumber);
-
-}
\ No newline at end of file
Index: src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java b/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,20 +0,0 @@
-package com.micronauticals.springbootmicroservice.constants;
-
-public final class AccountsConstants {
-
-    public static final String STATUS_500 = "500";
-
-    private AccountsConstants(){
-
-    }
-    public static final String  SAVINGS = "Savings";
-    public static final String  ADDRESS = "123 Main Street, New York";
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Account created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/CustomerDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,26 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import jakarta.validation.constraints.*;
-import lombok.Data;
-
-
-/**
- * The type Customer dto.
- */
-@Data
-public class CustomerDto {
-
-    @NotEmpty(message = "Name is required")
-    @Size(min=5,max=30, message = "Name should be between 5 to 30 characters")
-    private String name;
-
-    @NotNull(message = "Email is required")
-    @Email
-    private String email;
-
-    @NotEmpty(message = "Mobile number is required")
-    @Pattern(regexp = "(^$|[0-9]{10})", message = "Mobile number is invalid")
-    private String mobileNumber;
-
-    private AccountsDto accountsDto;
-
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,24 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Schema(
-        name = "Response",
-        description = "Schema to hold successful response information"
-)
-@Data @AllArgsConstructor
-public class ResponseDto {
-
-    @Schema(
-            description = "Status code in the response"
-    )
-    private String statusCode;
-
-    @Schema(
-            description = "Status message in the response"
-    )
-    private String statusMsg;
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-
-    public ResourceNotFoundException(String resrouceName, String fieldName, String message) {
-        super(String.format("%s not found with %s : '%s'", resrouceName, fieldName, message));
-    }
-}
Index: V2_Cloud_Config/Accounts_Microservice/Dockerfile
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/Dockerfile b/V2_Cloud_Config/Accounts_Microservice/Dockerfile
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/Dockerfile	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,25 +0,0 @@
-FROM openjdk:21
-
-# Use an official OpenJDK runtime as a parent image
-
-# Set the maintainer label
-LABEL maintainer="PPS"
-
-# Set the working directory inside the container
-WORKDIR /app
-
-COPY mvnw .
-COPY mvnw.cmd .
-COPY .mvn .mvn
-# Copy the Maven project files to the container
-COPY pom.xml .
-COPY src ./src
-
-# Build the project to create the JAR file
-RUN ./mvnw package
-
-# Copy the generated JAR file to the container
-COPY target/AccountsMicroservice-0.0.1-SNAPSHOT.jar accounts-microservice-0.0.1-SNAPSHOT.jar
-
-# Define the entry point for the container
-ENTRYPOINT ["java", "-jar", "/app/accounts-microservice-0.0.1-SNAPSHOT.jar"]
\ No newline at end of file
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/AccountsRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.springbootmicroservice.repository;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-import jakarta.transaction.Transactional;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.data.jpa.repository.Modifying;
-
-import java.util.Optional;
-
-
-public interface AccountsRepository extends JpaRepository<Accounts, Long> {
-       Optional<Accounts> findByCustomerId(Long customerId);
-
-       @Transactional
-       @Modifying
-       void deleteByCustomerId(Long customerId);
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,35 +0,0 @@
-package com.micronauticals.cards_microservice.service;
-
-
-import com.micronauticals.cards_microservice.dto.CardsDto;
-
-public interface ICardsService {
-
-    /**
-     *
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    void createCard(String mobileNumber);
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     *  @return Card Details based on a given mobileNumber
-     */
-    CardsDto fetchCard(String mobileNumber);
-
-    /**
-     *
-     * @param cardsDto - CardsDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    boolean updateCard(CardsDto cardsDto);
-
-    /**
-     *
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of card details is successful or not
-     */
-    boolean deleteCard(String mobileNumber);
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/service/ICardsService.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/service/ICardsService.java b/src/main/java/com/micronauticals/cards_microservice/service/ICardsService.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/service/ICardsService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,35 +0,0 @@
-package com.micronauticals.cards_microservice.service;
-
-
-import com.micronauticals.cards_microservice.dto.CardsDto;
-
-public interface ICardsService {
-
-    /**
-     *
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    void createCard(String mobileNumber);
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     *  @return Card Details based on a given mobileNumber
-     */
-    CardsDto fetchCard(String mobileNumber);
-
-    /**
-     *
-     * @param cardsDto - CardsDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    boolean updateCard(CardsDto cardsDto);
-
-    /**
-     *
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of card details is successful or not
-     */
-    boolean deleteCard(String mobileNumber);
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/exception/GlobalExceptionHandler.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/exception/GlobalExceptionHandler.java b/src/main/java/com/micronauticals/cards_microservice/exception/GlobalExceptionHandler.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/exception/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,75 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import com.micronauticals.cards_microservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-        Map<String, String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorList = ex.getBindingResult().getAllErrors();
-
-        validationErrorList.forEach((error) -> {
-            String fieldName = ((FieldError) error).getField();
-            String validationMsg = error.getDefaultMessage();
-            validationErrors.put(fieldName, validationMsg);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException(Exception exception,
-                                                                  WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
-                .body(errorResponseDTO);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> handleResourceNotFoundException(ResourceNotFoundException exception,
-                                                                            WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.NOT_FOUND);
-    }
-
-    @ExceptionHandler(CardAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleCardAlreadyExistsException(CardAlreadyExistsException exception,
-                                                                             WebRequest webRequest){
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.BAD_REQUEST);
-    }
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.cards_microservice.constants;
-
-public class CardsConstants {
-    private CardsConstants() {
-        // restrict instantiation
-    }
-
-    public static final String  CREDIT_CARD = "Credit Card";
-    public static final int  NEW_CARD_LIMIT = 1_00_000;
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Card created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,74 +0,0 @@
-package com.micronauticals.loansmicroservice.exception;
-
-import com.micronauticals.loansmicroservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-        Map<String, String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorList = ex.getBindingResult().getAllErrors();
-
-        validationErrorList.forEach((error) -> {
-            String fieldName = ((FieldError) error).getField();
-            String validationMsg = error.getDefaultMessage();
-            validationErrors.put(fieldName, validationMsg);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException(Exception exception,
-                                                                  WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.INTERNAL_SERVER_ERROR);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> handleResourceNotFoundException(ResourceNotFoundException exception,
-                                                                            WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.NOT_FOUND);
-    }
-
-    @ExceptionHandler(LoanAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleLoanAlreadyExistsException(LoanAlreadyExistsException exception,
-                                                                             WebRequest webRequest){
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.BAD_REQUEST);
-    }
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java b/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,22 +0,0 @@
-package com.micronauticals.springbootmicroservice.mapper;
-import com.micronauticals.springbootmicroservice.dto.AccountsDto;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-
-
-public class AccountsMapper {
-
-    public static AccountsDto mapToAccountsDto(Accounts accounts, AccountsDto accountsDto ){
-        accountsDto.setAccountNumber(accounts.getAccountNumber());
-        accountsDto.setAccountType(accounts.getAccountType());
-        accountsDto.setBranchAddress(accounts.getBranchAddress());
-        return accountsDto;
-    }
-
-    public static Accounts mapToAccounts(AccountsDto accountsDto, Accounts accounts){
-        accounts.setAccountNumber(accountsDto.getAccountNumber());
-        accounts.setAccountType(accountsDto.getAccountType());
-        accounts.setBranchAddress(accountsDto.getBranchAddress());
-        return accounts;
-    }
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,72 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-import com.micronauticals.springbootmicroservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-
-        Map<String,String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorsList = ex.getBindingResult().getAllErrors();
-
-        validationErrorsList.forEach((error) ->{
-            String fieldName = ((FieldError)error).getField();
-            String errorMessage = error.getDefaultMessage();
-            validationErrors.put(fieldName, errorMessage);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException( Exception exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.INSUFFICIENT_STORAGE);
-    }
-
-    @ExceptionHandler(CustomerAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleCustomerAlreadyExistsException( CustomerAlreadyExistsException exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> ResourceNotFoundException( ResourceNotFoundException exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.NOT_FOUND);
-    }
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/dto/ResponseDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/dto/ResponseDto.java b/src/main/java/com/micronauticals/cards_microservice/dto/ResponseDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,24 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Schema(
-        name = "Response",
-        description = "Schema to hold successful response information"
-)
-@Data @AllArgsConstructor
-public class ResponseDto {
-
-    @Schema(
-            description = "Status code in the response"
-    )
-    private String statusCode;
-
-    @Schema(
-            description = "Status message in the response"
-    )
-    private String statusMsg;
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java b/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-
-    public ResourceNotFoundException(String resrouceName, String fieldName, String message) {
-        super(String.format("%s not found with %s : '%s'", resrouceName, fieldName, message));
-    }
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/Accounts.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-
-
-import jakarta.persistence.Entity;
-import jakarta.persistence.Id;
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-import lombok.NoArgsConstructor;
-import lombok.Setter;
-
-
-@Entity
-@Getter@Setter@NoArgsConstructor@AllArgsConstructor
-public class Accounts extends BaseEntity {
-
-    private Long customerId;
-    @Id
-    private Long accountNumber;
-    private String accountType;
-    private String branchAddress;
-
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/exception/ResourceNotFoundException.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/exception/ResourceNotFoundException.java b/src/main/java/com/micronauticals/cards_microservice/exception/ResourceNotFoundException.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/exception/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-
-    public ResourceNotFoundException(String resourceName, String fieldName, String fieldValue){
-        super(String.format("%s not found with the given input data %s : '%s'", resourceName, fieldName, fieldValue));
-    }
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-package com.micronauticals.springbootmicroservice.entity;
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Data;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-import org.springframework.stereotype.Component;
-import java.time.LocalDateTime;
-
-
-@MappedSuperclass
-@Component
-@Data
-@EntityListeners(AuditingEntityListener.class)
-public class BaseEntity {
-
-    @Column(updatable = false)
-    @CreatedDate
-    private LocalDateTime createdAt;
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedDate
-    @Column(insertable = false)
-    private LocalDateTime updatedAt;
-
-    @LastModifiedBy
-    @Column(insertable = false)
-    private String updatedBy;
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,34 +0,0 @@
-package com.micronauticals.loansmicroservice.entity;
-import jakarta.persistence.Entity;
-import jakarta.persistence.GeneratedValue;
-import jakarta.persistence.GenerationType;
-import jakarta.persistence.Id;
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-import lombok.NoArgsConstructor;
-import lombok.Setter;
-
-@Entity
-@Getter
-@Setter
-@AllArgsConstructor
-@NoArgsConstructor
-public class Loans extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long loanId;
-
-    private String mobileNumber;
-
-    private String loanNumber;
-
-    private String loanType;
-
-    private int totalLoan;
-
-    private int amountPaid;
-
-    private int outstandingAmount;
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/resources/schema.sql
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/resources/schema.sql b/V2_Cloud_Config/cards_microservice/src/main/resources/schema.sql
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/resources/schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-CREATE TABLE IF NOT EXISTS `cards` (
-                                       `card_id` int NOT NULL AUTO_INCREMENT,
-                                       `mobile_number` varchar(15) NOT NULL,
-    `card_number` varchar(100) NOT NULL,
-    `card_type` varchar(100) NOT NULL,
-    `total_limit` int NOT NULL,
-    `amount_used` int NOT NULL,
-    `available_amount` int NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-    PRIMARY KEY (`card_id`)
-    );
\ No newline at end of file
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/loans.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/loans.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/loans.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/loans.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-build:
-  version: "0.0.1"
-
-loans:
-  message: "Welcome to Loans Microservice"
-  contactDetails:
-    email: "pps@test.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "123-456-7890"
-    - "098-765-4321"
-
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-package com.micronauticals.springbootmicroservice;
-
-import com.micronauticals.springbootmicroservice.dto.AccountsContactInfoDto;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-@EnableJpaAuditing(auditorAwareRef = "auditAwareImpl")
-@EnableConfigurationProperties(value= AccountsContactInfoDto.class)
-public class AccountsMicroservice {
-
-    public static void main(String[] args) {
-        SpringApplication.run(AccountsMicroservice.class, args);
-    }
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,108 +0,0 @@
-package com.micronauticals.springbootmicroservice.impl;
-import com.micronauticals.springbootmicroservice.constants.AccountsConstants;
-import com.micronauticals.springbootmicroservice.dto.AccountsDto;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-import com.micronauticals.springbootmicroservice.exceptions.CustomerAlreadyExistsException;
-import com.micronauticals.springbootmicroservice.exceptions.ResourceNotFoundException;
-import com.micronauticals.springbootmicroservice.mapper.AccountsMapper;
-import com.micronauticals.springbootmicroservice.mapper.CustomerMapper;
-import com.micronauticals.springbootmicroservice.repository.AccountsRepository;
-import com.micronauticals.springbootmicroservice.repository.CustomerRepository;
-import com.micronauticals.springbootmicroservice.service.IAccountsService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-import java.util.Optional;
-import java.util.Random;
-
-
-@Service
-@AllArgsConstructor
-public class AccountsServiceImpl implements IAccountsService {
-
-    private AccountsRepository accountsRepository;
-    private CustomerRepository customerRepository;
-
-    private Accounts createdNewAccount(Customer customer){
-        Accounts newAccount = new Accounts();
-        newAccount.setCustomerId(customer.getCustomerId());
-        long randomAccNumber = 1000000000L + new Random().nextInt(900000000);
-        newAccount.setAccountNumber(randomAccNumber);
-        newAccount.setAccountType(AccountsConstants.SAVINGS);
-        newAccount.setBranchAddress(AccountsConstants.ADDRESS);
-        return newAccount;
-    }
-
-
-    @Override
-    public void createAccount(CustomerDto customerDto) {
-        Customer customer = CustomerMapper.mapToCustomer(customerDto, new Customer());
-        Optional<Customer> optionalCustomer = customerRepository.findByMobileNumber(customerDto.getMobileNumber());
-        if(optionalCustomer.isPresent()){
-            throw new CustomerAlreadyExistsException("Customer already exists with mobile number: "+customerDto.getMobileNumber());
-        }
-        Customer savedCustomer = customerRepository.save(customer);
-        accountsRepository.save(createdNewAccount(savedCustomer));
-    }
-
-    @Override
-    public CustomerDto fetchAccount(String mobileNumber) {
-        Customer customer = customerRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Customer", "mobileNumber", mobileNumber)
-        );
-        Accounts account = accountsRepository.findByCustomerId(customer.getCustomerId()).orElseThrow(
-                () -> new ResourceNotFoundException("Account", "customerId", customer.getCustomerId().toString())
-        );
-        CustomerDto customerDto = CustomerMapper.mapToCustomerDto(customer, new CustomerDto());
-        customerDto.setAccountsDto(AccountsMapper.mapToAccountsDto(account, new AccountsDto()));
-
-        return customerDto;
-    }
-
-    /**
-     * @param customerDto the customer dto
-     * @return boolean
-     */
-    @Override
-    public boolean updateAccount(CustomerDto customerDto) {
-
-        boolean isUpdated = false;
-        AccountsDto accountsDto = customerDto.getAccountsDto();
-        if(accountsDto != null){
-            Accounts account = accountsRepository.findById(accountsDto.getAccountNumber()).orElseThrow(
-                    () -> new ResourceNotFoundException("Account", "accountNumber", accountsDto.getAccountNumber().toString())
-            );
-            AccountsMapper.mapToAccounts(accountsDto, account);
-            account = accountsRepository.save(account);
-
-            Long customerId = account.getCustomerId();
-            Customer customer = customerRepository.findById(customerId).orElseThrow(
-                    () -> new ResourceNotFoundException("Customer", "customerId", customerId.toString())
-            );
-            CustomerMapper.mapToCustomer(customerDto, customer);
-            customerRepository.save(customer);
-            isUpdated = true;
-
-        }
-        return isUpdated;
-     }
-
-    /**
-     * @param mobileNumber the mobile number
-     * @return boolean
-     */
-    @Override
-    public boolean deleteAccount(String mobileNumber) {
-        boolean isDeleted = false;
-        Customer customer = customerRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Customer", "mobileNumber", mobileNumber)
-        );
-
-        accountsRepository.deleteByCustomerId(customer.getCustomerId());
-        customerRepository.deleteById(customer.getCustomerId());
-        isDeleted = true;
-        return isDeleted;
-    }
-
-}
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/loans-qa.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/loans-qa.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/loans-qa.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/loans-qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-loans:
-  message: "Welcome to QA environment Loans Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V1/cards_microservice/src/main/resources/schema.sql
===================================================================
diff --git a/V1/cards_microservice/src/main/resources/schema.sql b/V1/cards_microservice/src/main/resources/schema.sql
deleted file mode 100644
--- a/V1/cards_microservice/src/main/resources/schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,22 +0,0 @@
-CREATE TABLE IF NOT EXISTS `customer` (
-    `customer_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `name` varchar(100) NOT NULL,
-    `email` varchar(100) NOT NULL,
-    `mobile_number` varchar(20) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL
-    );
-
-CREATE TABLE IF NOT EXISTS `accounts` (
-    `account_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `customer_id` BIGINT NOT NULL,
-    `account_number` BIGINT NOT NULL,
-    `branch_address` varchar(200) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-    FOREIGN KEY (`customer_id`) REFERENCES `customer`(`customer_id`)
-    );
\ No newline at end of file
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,36 +0,0 @@
-package com.micronauticals.springbootmicroservice.service;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-
-
-public interface IAccountsService {
-    /**
-     * Create account.
-     *
-     * @param customerDto the customer dto
-     */
-    void createAccount(CustomerDto customerDto);
-
-    /**
-     * Fetch account customer dto.
-     *
-     * @param mobileNumber the mobile number
-     * @return the customer dto
-     */
-    CustomerDto fetchAccount(String mobileNumber);
-
-    /**
-     * Update account boolean.
-     *
-     * @param customerDto the customer dto
-     * @return the boolean
-     */
-    boolean updateAccount(CustomerDto customerDto);
-
-    /**
-     * Delete account boolean.
-     *
-     * @param mobileNumber the mobile number
-     * @return the boolean
-     */
-    boolean deleteAccount(String mobileNumber);
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,86 +0,0 @@
-package com.micronauticals.loansmicroservice.impl;
-
-import com.micronauticals.loansmicroservice.constants.LoansConstants;
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-import com.micronauticals.loansmicroservice.entity.Loans;
-import com.micronauticals.loansmicroservice.exception.LoanAlreadyExistsException;
-import com.micronauticals.loansmicroservice.exception.ResourceNotFoundException;
-import com.micronauticals.loansmicroservice.mapper.LoansMapper;
-import com.micronauticals.loansmicroservice.repository.LoansRepository;
-import com.micronauticals.loansmicroservice.service.ILoansService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-import java.util.Optional;
-import java.util.Random;
-
-
-@Service
-@AllArgsConstructor
-public class LoansServiceImpl implements ILoansService {
-
-    private LoansRepository loansRepository;
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-
-    private Loans createNewLoan(String mobileNumber){
-        Loans newLoan = new Loans();
-        long randomLoanNumber = 100000000000L + new Random().nextInt(900000000);
-        newLoan.setLoanNumber(Long.toString(randomLoanNumber));
-        newLoan.setMobileNumber(mobileNumber);
-        newLoan.setLoanType(LoansConstants.HOME_LOAN);
-        newLoan.setTotalLoan(LoansConstants.NEW_LOAN_LIMIT);
-        newLoan.setAmountPaid(0);
-        newLoan.setOutstandingAmount(LoansConstants.NEW_LOAN_LIMIT);
-        return newLoan;
-    }
-
-    @Override
-    public void createLoan(String mobileNumber) {
-        Optional<Loans> optionalLoans = loansRepository.findByMobileNumber(mobileNumber);
-        if(optionalLoans.isPresent()){
-            throw new LoanAlreadyExistsException("Loan already exists for the given mobile number");
-        }
-        loansRepository.save(createNewLoan(mobileNumber));
-    }
-
-    /**
-     * @param mobileNumber - Input mobile Number
-     * @return LoansDto
-     */
-    @Override
-    public LoansDto fetchLoan(String mobileNumber) {
-        Loans loans = loansRepository.findByMobileNumber((mobileNumber)).orElseThrow(
-                () -> new ResourceNotFoundException("Loan","LoanNumber",mobileNumber)
-        );
-        return LoansMapper.mapToLoansDto(loans,new LoansDto());
-    }
-
-    /**
-     * @param loansDto - LoansDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    @Override
-    public boolean updateLoan(LoansDto loansDto) {
-        Loans loans = loansRepository.findByLoanNumber(loansDto.getLoanNumber()).orElseThrow(
-                () -> new ResourceNotFoundException("Loan", "LoanNumber", loansDto.getLoanNumber()));
-        LoansMapper.mapToLoans(loansDto, loans);
-        loansRepository.save(loans);
-        return  true;
-    }
-
-    /**
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of loan details is successful or not
-     */
-    @Override
-    public boolean deleteLoan(String mobileNumber) {
-        Loans loans = loansRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Loan", "mobileNumber", mobileNumber)
-        );
-        loansRepository.deleteById(loans.getLoanId());
-        return true;
-    }
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,92 +0,0 @@
-package com.micronauticals.cards_microservice.impl;
-
-import com.micronauticals.cards_microservice.constants.CardsConstants;
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.entity.Cards;
-import com.micronauticals.cards_microservice.exception.CardAlreadyExistsException;
-import com.micronauticals.cards_microservice.exception.ResourceNotFoundException;
-import com.micronauticals.cards_microservice.mapper.CardsMapper;
-import com.micronauticals.cards_microservice.repository.CardsRepository;
-import com.micronauticals.cards_microservice.service.ICardsService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-
-import java.util.Optional;
-import java.util.Random;
-
-@Service
-@AllArgsConstructor
-public class CardsServiceImpl implements ICardsService {
-
-    private CardsRepository cardsRepository;
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    @Override
-    public void createCard(String mobileNumber) {
-        Optional<Cards> optionalCards= cardsRepository.findByMobileNumber(mobileNumber);
-        if(optionalCards.isPresent()){
-            throw new CardAlreadyExistsException("Card already registered with given mobileNumber "+mobileNumber);
-        }
-        cardsRepository.save(createNewCard(mobileNumber));
-    }
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     * @return the new card details
-     */
-    private Cards createNewCard(String mobileNumber) {
-        Cards newCard = new Cards();
-        long randomCardNumber = 100000000000L + new Random().nextInt(900000000);
-        newCard.setCardNumber(Long.toString(randomCardNumber));
-        newCard.setMobileNumber(mobileNumber);
-        newCard.setCardType(CardsConstants.CREDIT_CARD);
-        newCard.setTotalLimit(CardsConstants.NEW_CARD_LIMIT);
-        newCard.setAmountUsed(0);
-        newCard.setAvailableAmount(CardsConstants.NEW_CARD_LIMIT);
-        return newCard;
-    }
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     * @return Card Details based on a given mobileNumber
-     */
-    @Override
-    public CardsDto fetchCard(String mobileNumber) {
-        Cards cards = cardsRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "mobileNumber", mobileNumber)
-        );
-        return CardsMapper.mapToCardsDto(cards, new CardsDto());
-    }
-
-    /**
-     *
-     * @param cardsDto - CardsDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    @Override
-    public boolean updateCard(CardsDto cardsDto) {
-        Cards cards = cardsRepository.findByCardNumber(cardsDto.getCardNumber()).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "CardNumber", cardsDto.getCardNumber()));
-        CardsMapper.mapToCards(cardsDto, cards);
-        cardsRepository.save(cards);
-        return  true;
-    }
-
-    /**
-     * @param mobileNumber - Input MobileNumber
-     * @return boolean indicating if the delete of card details is successful or not
-     */
-    @Override
-    public boolean deleteCard(String mobileNumber) {
-        Cards cards = cardsRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "mobileNumber", mobileNumber)
-        );
-        cardsRepository.deleteById(cards.getCardId());
-        return true;
-    }
-
-
-}
Index: V2_Cloud_Config/cards_microservice/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/.mvn/wrapper/maven-wrapper.properties b/V2_Cloud_Config/cards_microservice/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,15 +0,0 @@
-package com.micronauticals.loansmicroservice;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-@EnableJpaAuditing(auditorAwareRef = "auditorAwareImpl")
-public class LoansmicroserviceApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(LoansmicroserviceApplication.class, args);
-    }
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,53 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-import io.swagger.v3.oas.annotations.media.Schema;
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import jakarta.validation.constraints.Positive;
-import jakarta.validation.constraints.PositiveOrZero;
-import lombok.*;
-
-@Schema(name = "Cards",
-        description = "Schema to hold Card information"
-)
-@Data
-public class CardsDto {
-
-    @NotEmpty(message = "Mobile Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile Number must be 10 digits")
-    @Schema(
-            description = "Mobile Number of Customer", example = "4354437687"
-    )
-    private String mobileNumber;
-
-    @NotEmpty(message = "Card Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{12})",message = "CardNumber must be 12 digits")
-    @Schema(
-            description = "Card Number of the customer", example = "100646930341"
-    )
-    private String cardNumber;
-
-    @NotEmpty(message = "CardType can not be a null or empty")
-    @Schema(
-            description = "Type of the card", example = "Credit Card"
-    )
-    private String cardType;
-
-    @Positive(message = "Total card limit should be greater than zero")
-    @Schema(
-            description = "Total amount limit available against a card", example = "100000"
-    )
-    private int totalLimit;
-
-    @PositiveOrZero(message = "Total amount used should be equal or greater than zero")
-    @Schema(
-            description = "Total amount used by a Customer", example = "1000"
-    )
-    private int amountUsed;
-
-    @PositiveOrZero(message = "Total available amount should be equal or greater than zero")
-    @Schema(
-            description = "Total available amount against a card", example = "90000"
-    )
-    private int availableAmount;
-
-}
Index: src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java
===================================================================
diff --git a/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java b/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java
deleted file mode 100644
--- a/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.springbootmicroservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class AccountsMicroserviceTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-
-@Data
-@AllArgsConstructor
-public class ResponseDto {
-    private String statusCode;
-    private String statusMessage;
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-package com.micronauticals.springbootmicroservice.mapper;
-
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-
-public class CustomerMapper {
-
-    public static CustomerDto mapToCustomerDto(Customer customer, CustomerDto customerDto){
-        customerDto.setName(customer.getName());
-        customerDto.setEmail(customer.getEmail());
-        customerDto.setMobileNumber(customer.getMobileNumber());
-        return customerDto;
-    }
-
-    public static Customer mapToCustomer(CustomerDto customerDto,Customer customer ){
-        customer.setName(customerDto.getName());
-        customer.setEmail(customerDto.getEmail());
-        customer.setMobileNumber(customerDto.getMobileNumber());
-        return customer;
-    }
-
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/dto/ErrorResponseDto.java b/src/main/java/com/micronauticals/cards_microservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data @AllArgsConstructor
-@Schema(
-        name = "ErrorResponse",
-        description = "Schema to hold error response information"
-)
-public class ErrorResponseDto {
-
-    @Schema(
-            description = "API path invoked by client"
-    )
-    private  String apiPath;
-
-    @Schema(
-            description = "Error code representing the error happened"
-    )
-    private HttpStatus errorCode;
-
-    @Schema(
-            description = "Error message representing the error happened"
-    )
-    private  String errorMessage;
-
-    @Schema(
-            description = "Time representing when the error happened"
-    )
-    private LocalDateTime errorTime;
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,24 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Schema(
-        name = "Response",
-        description = "Schema to hold successful response information"
-)
-@Data @AllArgsConstructor
-public class ResponseDto {
-
-    @Schema(
-            description = "Status code in the response"
-    )
-    private String statusCode;
-
-    @Schema(
-            description = "Status message in the response"
-    )
-    private String statusMsg;
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-
-    public ResourceNotFoundException(String resourceName, String fieldName, String fieldValue){
-        super(String.format("%s not found with the given input data %s : '%s'", resourceName, fieldName, fieldValue));
-    }
-}
Index: V1/Accounts_Microservice/src/main/resources/schema.sql
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/resources/schema.sql b/V1/Accounts_Microservice/src/main/resources/schema.sql
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/resources/schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,22 +0,0 @@
-CREATE TABLE IF NOT EXISTS `customer` (
-    `customer_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `name` varchar(100) NOT NULL,
-    `email` varchar(100) NOT NULL,
-    `mobile_number` varchar(20) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL
-    );
-
-CREATE TABLE IF NOT EXISTS `accounts` (
-    `account_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `customer_id` BIGINT NOT NULL,
-    `account_number` BIGINT NOT NULL,
-    `branch_address` varchar(200) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-    FOREIGN KEY (`customer_id`) REFERENCES `customer`(`customer_id`)
-    );
\ No newline at end of file
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,24 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Schema(
-        name = "Response",
-        description = "Schema to hold successful response information"
-)
-@Data @AllArgsConstructor
-public class ResponseDto {
-
-    @Schema(
-            description = "Status code in the response"
-    )
-    private String statusCode;
-
-    @Schema(
-            description = "Status message in the response"
-    )
-    private String statusMsg;
-
-}
Index: src/main/resources/schema.sql
===================================================================
diff --git a/src/main/resources/schema.sql b/src/main/resources/schema.sql
deleted file mode 100644
--- a/src/main/resources/schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-<<<<<<< HEAD
-CREATE TABLE IF NOT EXISTS `customer` (
-    `customer_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `name` varchar(100) NOT NULL,
-    `email` varchar(100) NOT NULL,
-    `mobile_number` varchar(20) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL
-    );
-
-CREATE TABLE IF NOT EXISTS `accounts` (
-    `account_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `customer_id` BIGINT NOT NULL,
-    `account_number` BIGINT NOT NULL,
-    `branch_address` varchar(200) NOT NULL,
-=======
-CREATE TABLE IF NOT EXISTS `cards` (
-                                       `card_id` int NOT NULL AUTO_INCREMENT,
-                                       `mobile_number` varchar(15) NOT NULL,
-    `card_number` varchar(100) NOT NULL,
-    `card_type` varchar(100) NOT NULL,
-    `total_limit` int NOT NULL,
-    `amount_used` int NOT NULL,
-    `available_amount` int NOT NULL,
->>>>>>> origin/Cards_Microservice
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-<<<<<<< HEAD
-    FOREIGN KEY (`customer_id`) REFERENCES `customer`(`customer_id`)
-=======
-    PRIMARY KEY (`card_id`)
->>>>>>> origin/Cards_Microservice
-    );
\ No newline at end of file
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/cards.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/cards.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/cards.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/cards.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-build:
-   version: "0.0.1"
-
-cards:
-  message: "Welcome to Cards Microservice"
-  contactDetails:
-    email: "pps@test.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "123-456-7890"
-    - "098-765-4321"
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/Loans.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,34 +0,0 @@
-package com.micronauticals.loansmicroservice.entity;
-import jakarta.persistence.Entity;
-import jakarta.persistence.GeneratedValue;
-import jakarta.persistence.GenerationType;
-import jakarta.persistence.Id;
-import lombok.AllArgsConstructor;
-import lombok.Getter;
-import lombok.NoArgsConstructor;
-import lombok.Setter;
-
-@Entity
-@Getter
-@Setter
-@AllArgsConstructor
-@NoArgsConstructor
-public class Loans extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long loanId;
-
-    private String mobileNumber;
-
-    private String loanNumber;
-
-    private String loanType;
-
-    private int totalLoan;
-
-    private int amountPaid;
-
-    private int outstandingAmount;
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/service/ILoansService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,32 +0,0 @@
-package com.micronauticals.loansmicroservice.service;
-
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-
-public interface ILoansService {
-    /**
-     *
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    void createLoan(String mobileNumber);
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     *  @return Loan Details based on a given mobileNumber
-     */
-    LoansDto fetchLoan(String mobileNumber);
-
-    /**
-     *
-     * @param loansDto - LoansDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    boolean updateLoan(LoansDto loansDto);
-
-    /**
-     *
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of loan details is successful or not
-     */
-    boolean deleteLoan(String mobileNumber);
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java b/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class CustomerAlreadyExistsException extends RuntimeException {
-    public CustomerAlreadyExistsException(String message) {
-        super(message);
-    }
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.springbootmicroservice.audit;
-import org.jetbrains.annotations.NotNull;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-import java.util.Optional;
-
-
-@Component("auditAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-
-    @Override
-    public @NotNull Optional<String> getCurrentAuditor() {
-        return Optional.of("ACCOUNTS_MS");
-    }
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java b/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,108 +0,0 @@
-package com.micronauticals.springbootmicroservice.impl;
-import com.micronauticals.springbootmicroservice.constants.AccountsConstants;
-import com.micronauticals.springbootmicroservice.dto.AccountsDto;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-import com.micronauticals.springbootmicroservice.exceptions.CustomerAlreadyExistsException;
-import com.micronauticals.springbootmicroservice.exceptions.ResourceNotFoundException;
-import com.micronauticals.springbootmicroservice.mapper.AccountsMapper;
-import com.micronauticals.springbootmicroservice.mapper.CustomerMapper;
-import com.micronauticals.springbootmicroservice.repository.AccountsRepository;
-import com.micronauticals.springbootmicroservice.repository.CustomerRepository;
-import com.micronauticals.springbootmicroservice.service.IAccountsService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-import java.util.Optional;
-import java.util.Random;
-
-
-@Service
-@AllArgsConstructor
-public class AccountsServiceImpl implements IAccountsService {
-
-    private AccountsRepository accountsRepository;
-    private CustomerRepository customerRepository;
-
-    private Accounts createdNewAccount(Customer customer){
-        Accounts newAccount = new Accounts();
-        newAccount.setCustomerId(customer.getCustomerId());
-        long randomAccNumber = 1000000000L + new Random().nextInt(900000000);
-        newAccount.setAccountNumber(randomAccNumber);
-        newAccount.setAccountType(AccountsConstants.SAVINGS);
-        newAccount.setBranchAddress(AccountsConstants.ADDRESS);
-        return newAccount;
-    }
-
-
-    @Override
-    public void createAccount(CustomerDto customerDto) {
-        Customer customer = CustomerMapper.mapToCustomer(customerDto, new Customer());
-        Optional<Customer> optionalCustomer = customerRepository.findByMobileNumber(customerDto.getMobileNumber());
-        if(optionalCustomer.isPresent()){
-            throw new CustomerAlreadyExistsException("Customer already exists with mobile number: "+customerDto.getMobileNumber());
-        }
-        Customer savedCustomer = customerRepository.save(customer);
-        accountsRepository.save(createdNewAccount(savedCustomer));
-    }
-
-    @Override
-    public CustomerDto fetchAccount(String mobileNumber) {
-        Customer customer = customerRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Customer", "mobileNumber", mobileNumber)
-        );
-        Accounts account = accountsRepository.findByCustomerId(customer.getCustomerId()).orElseThrow(
-                () -> new ResourceNotFoundException("Account", "customerId", customer.getCustomerId().toString())
-        );
-        CustomerDto customerDto = CustomerMapper.mapToCustomerDto(customer, new CustomerDto());
-        customerDto.setAccountsDto(AccountsMapper.mapToAccountsDto(account, new AccountsDto()));
-
-        return customerDto;
-    }
-
-    /**
-     * @param customerDto the customer dto
-     * @return boolean
-     */
-    @Override
-    public boolean updateAccount(CustomerDto customerDto) {
-
-        boolean isUpdated = false;
-        AccountsDto accountsDto = customerDto.getAccountsDto();
-        if(accountsDto != null){
-            Accounts account = accountsRepository.findById(accountsDto.getAccountNumber()).orElseThrow(
-                    () -> new ResourceNotFoundException("Account", "accountNumber", accountsDto.getAccountNumber().toString())
-            );
-            AccountsMapper.mapToAccounts(accountsDto, account);
-            account = accountsRepository.save(account);
-
-            Long customerId = account.getCustomerId();
-            Customer customer = customerRepository.findById(customerId).orElseThrow(
-                    () -> new ResourceNotFoundException("Customer", "customerId", customerId.toString())
-            );
-            CustomerMapper.mapToCustomer(customerDto, customer);
-            customerRepository.save(customer);
-            isUpdated = true;
-
-        }
-        return isUpdated;
-     }
-
-    /**
-     * @param mobileNumber the mobile number
-     * @return boolean
-     */
-    @Override
-    public boolean deleteAccount(String mobileNumber) {
-        boolean isDeleted = false;
-        Customer customer = customerRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Customer", "mobileNumber", mobileNumber)
-        );
-
-        accountsRepository.deleteByCustomerId(customer.getCustomerId());
-        customerRepository.deleteById(customer.getCustomerId());
-        isDeleted = true;
-        return isDeleted;
-    }
-
-}
Index: V1/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java
===================================================================
diff --git a/V1/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java b/V1/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.loansmicroservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class LoansmicroserviceApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V1/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java b/V1/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.springbootmicroservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class AccountsMicroserviceTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,29 +0,0 @@
-package com.micronauticals.cards_microservice.mapper;
-
-
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.entity.Cards;
-
-public class CardsMapper {
-
-    public static CardsDto mapToCardsDto(Cards cards, CardsDto cardsDto) {
-        cardsDto.setCardNumber(cards.getCardNumber());
-        cardsDto.setCardType(cards.getCardType());
-        cardsDto.setMobileNumber(cards.getMobileNumber());
-        cardsDto.setTotalLimit(cards.getTotalLimit());
-        cardsDto.setAvailableAmount(cards.getAvailableAmount());
-        cardsDto.setAmountUsed(cards.getAmountUsed());
-        return cardsDto;
-    }
-
-    public static Cards mapToCards(CardsDto cardsDto, Cards cards) {
-        cards.setCardNumber(cardsDto.getCardNumber());
-        cards.setCardType(cardsDto.getCardType());
-        cards.setMobileNumber(cardsDto.getMobileNumber());
-        cards.setTotalLimit(cardsDto.getTotalLimit());
-        cards.setAvailableAmount(cardsDto.getAvailableAmount());
-        cards.setAmountUsed(cardsDto.getAmountUsed());
-        return cards;
-    }
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/LoansDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,54 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import jakarta.validation.constraints.Positive;
-import jakarta.validation.constraints.PositiveOrZero;
-import lombok.*;
-import io.swagger.v3.oas.annotations.media.Schema;
-
-@Schema(name = "Loans",
-        description = "Schema to hold Loan information"
-)
-@Data
-public class LoansDto {
-
-    @NotEmpty(message = "Mobile Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile Number must be 10 digits")
-    @Schema(
-            description = "Mobile Number of Customer", example = "4365327698"
-    )
-    private String mobileNumber;
-
-    @NotEmpty(message = "Loan Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{12})",message = "LoanNumber must be 12 digits")
-    @Schema(
-            description = "Loan Number of the customer", example = "548732457654"
-    )
-    private String loanNumber;
-
-    @NotEmpty(message = "LoanType can not be a null or empty")
-    @Schema(
-            description = "Type of the loan", example = "Home Loan"
-    )
-    private String loanType;
-
-    @Positive(message = "Total loan amount should be greater than zero")
-    @Schema(
-            description = "Total loan amount", example = "100000"
-    )
-    private int totalLoan;
-
-    @PositiveOrZero(message = "Total loan amount paid should be equal or greater than zero")
-    @Schema(
-            description = "Total loan amount paid", example = "1000"
-    )
-    private int amountPaid;
-
-    @PositiveOrZero(message = "Total outstanding amount should be equal or greater than zero")
-    @Schema(
-            description = "Total outstanding amount against a loan", example = "99000"
-    )
-    private int outstandingAmount;
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/dto/CardsDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/dto/CardsDto.java b/src/main/java/com/micronauticals/cards_microservice/dto/CardsDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/dto/CardsDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,53 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-import io.swagger.v3.oas.annotations.media.Schema;
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import jakarta.validation.constraints.Positive;
-import jakarta.validation.constraints.PositiveOrZero;
-import lombok.*;
-
-@Schema(name = "Cards",
-        description = "Schema to hold Card information"
-)
-@Data
-public class CardsDto {
-
-    @NotEmpty(message = "Mobile Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile Number must be 10 digits")
-    @Schema(
-            description = "Mobile Number of Customer", example = "4354437687"
-    )
-    private String mobileNumber;
-
-    @NotEmpty(message = "Card Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{12})",message = "CardNumber must be 12 digits")
-    @Schema(
-            description = "Card Number of the customer", example = "100646930341"
-    )
-    private String cardNumber;
-
-    @NotEmpty(message = "CardType can not be a null or empty")
-    @Schema(
-            description = "Type of the card", example = "Credit Card"
-    )
-    private String cardType;
-
-    @Positive(message = "Total card limit should be greater than zero")
-    @Schema(
-            description = "Total amount limit available against a card", example = "100000"
-    )
-    private int totalLimit;
-
-    @PositiveOrZero(message = "Total amount used should be equal or greater than zero")
-    @Schema(
-            description = "Total amount used by a Customer", example = "1000"
-    )
-    private int amountUsed;
-
-    @PositiveOrZero(message = "Total available amount should be equal or greater than zero")
-    @Schema(
-            description = "Total available amount against a card", example = "90000"
-    )
-    private int availableAmount;
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java b/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,36 +0,0 @@
-package com.micronauticals.springbootmicroservice.service;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-
-
-public interface IAccountsService {
-    /**
-     * Create account.
-     *
-     * @param customerDto the customer dto
-     */
-    void createAccount(CustomerDto customerDto);
-
-    /**
-     * Fetch account customer dto.
-     *
-     * @param mobileNumber the mobile number
-     * @return the customer dto
-     */
-    CustomerDto fetchAccount(String mobileNumber);
-
-    /**
-     * Update account boolean.
-     *
-     * @param customerDto the customer dto
-     * @return the boolean
-     */
-    boolean updateAccount(CustomerDto customerDto);
-
-    /**
-     * Delete account boolean.
-     *
-     * @param mobileNumber the mobile number
-     * @return the boolean
-     */
-    boolean deleteAccount(String mobileNumber);
-}
Index: V2_Cloud_Config/cloud_config/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/.mvn/wrapper/maven-wrapper.properties b/V2_Cloud_Config/cloud_config/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data
-@AllArgsConstructor
-@Schema(
-        name = "ErrorResponse",
-        description = "Schema to hold error response information"
-)
-public class ErrorResponseDto {
-
-    @Schema(
-            description = "API path invoked by client"
-    )
-    private  String apiPath;
-
-    @Schema(
-            description = "Error code representing the error happened"
-    )
-    private HttpStatus errorCode;
-
-    @Schema(
-            description = "Error message representing the error happened"
-    )
-    private  String errorMessage;
-
-    @Schema(
-            description = "Time representing when the error happened"
-    )
-    private LocalDateTime errorTime;
-
-}
Index: V1/cards_microservice/src/main/resources/application_qa.yaml
===================================================================
diff --git a/V1/cards_microservice/src/main/resources/application_qa.yaml b/V1/cards_microservice/src/main/resources/application_qa.yaml
deleted file mode 100644
--- a/V1/cards_microservice/src/main/resources/application_qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-accounts:
-  message: "Welcome to QA environment Cards Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.cards_microservice.entity;
-
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Getter;
-import lombok.Setter;
-import lombok.ToString;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-
-import java.time.LocalDateTime;
-
-@MappedSuperclass
-@EntityListeners(AuditingEntityListener.class)
-@Getter @Setter @ToString
-public class BaseEntity {
-
-    @CreatedDate
-    @Column(updatable = false)
-    private LocalDateTime createdAt;
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedDate
-    @Column(insertable = false)
-    private LocalDateTime updatedAt;
-
-    @LastModifiedBy
-    @Column(insertable = false)
-    private String updatedBy;
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.springbootmicroservice.repository;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-import java.util.Optional;
-
-
-@Repository
-public interface CustomerRepository extends JpaRepository<Customer, Long> {
-
-    Optional<Customer> findByMobileNumber(String mobileNumber);
-}
Index: src/main/java/com/micronauticals/cards_microservice/exception/CardAlreadyExistsException.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/exception/CardAlreadyExistsException.java b/src/main/java/com/micronauticals/cards_microservice/exception/CardAlreadyExistsException.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/exception/CardAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class CardAlreadyExistsException extends RuntimeException {
-
-    public CardAlreadyExistsException(String message){
-        super(message);
-    }
-
-}
\ No newline at end of file
Index: src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java b/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.springbootmicroservice.repository;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-import java.util.Optional;
-
-
-@Repository
-public interface CustomerRepository extends JpaRepository<Customer, Long> {
-
-    Optional<Customer> findByMobileNumber(String mobileNumber);
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java b/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-
-@Data
-@AllArgsConstructor
-public class ResponseDto {
-    private String statusCode;
-    private String statusMessage;
-}
Index: V1/LoansMicroservice/src/main/resources/Schema.sql
===================================================================
diff --git a/V1/LoansMicroservice/src/main/resources/Schema.sql b/V1/LoansMicroservice/src/main/resources/Schema.sql
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/resources/Schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-CREATE TABLE IF NOT EXISTS `cards` (
-   `card_id` int NOT NULL AUTO_INCREMENT,
-   `mobile_number` varchar(15) NOT NULL,
-    `card_number` varchar(100) NOT NULL,
-    `card_type` varchar(100) NOT NULL,
-    `total_limit` int NOT NULL,
-    `amount_used` int NOT NULL,
-    `available_amount` int NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-    PRIMARY KEY (`card_id`)
-    );
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,20 +0,0 @@
-package com.micronauticals.cards_microservice.audit;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-
-import java.util.Optional;
-
-@Component("auditAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-
-    /**
-     * Returns the current auditor of the application.
-     *
-     * @return the current auditor.
-     */
-    @Override
-    public Optional<String> getCurrentAuditor() {
-        return Optional.of("CARDS_MS");
-    }
-
-}
\ No newline at end of file
Index: src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java b/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,72 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-import com.micronauticals.springbootmicroservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-
-        Map<String,String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorsList = ex.getBindingResult().getAllErrors();
-
-        validationErrorsList.forEach((error) ->{
-            String fieldName = ((FieldError)error).getField();
-            String errorMessage = error.getDefaultMessage();
-            validationErrors.put(fieldName, errorMessage);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException( Exception exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.INSUFFICIENT_STORAGE);
-    }
-
-    @ExceptionHandler(CustomerAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleCustomerAlreadyExistsException( CustomerAlreadyExistsException exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> ResourceNotFoundException( ResourceNotFoundException exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.NOT_FOUND);
-    }
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Data
-public class AccountsDto {
-
-    @Pattern(regexp = "(^$|[0-9]{10})", message = "Mobile number is invalid")
-    @NotEmpty(message = "Mobile number is required")
-    private Long accountNumber;
-
-    @NotEmpty(message = "Account type is required")
-    private String accountType;
-
-    @NotEmpty(message = "Branch address is required")
-    private String branchAddress;
-}
Index: V1/LoansMicroservice/pom.xml
===================================================================
diff --git a/V1/LoansMicroservice/pom.xml b/V1/LoansMicroservice/pom.xml
deleted file mode 100644
--- a/V1/LoansMicroservice/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,101 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.3</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>loansmicroservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <name>loansmicroservice</name>
-    <description>loansmicroservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-    </properties>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-validation</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-annotations</artifactId>
-            <version>2.1.10</version>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: V1/LoansMicroservice/src/main/resources/application.yaml
===================================================================
diff --git a/V1/LoansMicroservice/src/main/resources/application.yaml b/V1/LoansMicroservice/src/main/resources/application.yaml
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-spring:
-  datasource:
-    driver-class-name: org.h2.Driver
-    url: jdbc:h2:mem:testdb
-    username: sa
-    password: ''
-
-  profiles:
-    active: "qa"
-
-  h2:
-    console:
-      enabled: true
-
-  jpa:
-    database-platform: org.hibernate.dialect.H2Dialect
-    hibernate:
-      ddl-auto: update
-    show-sql: true
-
-server:
-  port: 8082
-
Index: src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java b/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,42 +0,0 @@
-package com.micronauticals.cards_microservice;
-
-import io.swagger.v3.oas.annotations.ExternalDocumentation;
-import io.swagger.v3.oas.annotations.OpenAPIDefinition;
-import io.swagger.v3.oas.annotations.info.Contact;
-import io.swagger.v3.oas.annotations.info.Info;
-import io.swagger.v3.oas.annotations.info.License;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-/*@ComponentScans({ @ComponentScan("com.eazybytes.cards.controller") })
-@EnableJpaRepositories("com.eazybytes.cards.repository")
-@EntityScan("com.eazybytes.cards.model")*/
-@EnableJpaAuditing(auditorAwareRef = "auditAwareImpl")
-@OpenAPIDefinition(
-        info = @Info(
-                title = "Cards microservice REST API Documentation",
-                description = "EazyBank Cards microservice REST API Documentation",
-                version = "v1",
-                contact = @Contact(
-                        name = "Madan Reddy",
-                        email = "tutor@eazybytes.com",
-                        url = "https://www.eazybytes.com"
-                ),
-                license = @License(
-                        name = "Apache 2.0",
-                        url = "https://www.eazybytes.com"
-                )
-        ),
-        externalDocs = @ExternalDocumentation(
-                description = "EazyBank Cards microservice REST API Documentation",
-                url = "https://www.eazybytes.com/swagger-ui.html"
-        )
-)
-public class CardsMicroserviceApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(CardsMicroserviceApplication.class, args);
-    }
-}
\ No newline at end of file
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/service/IAccountsService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,36 +0,0 @@
-package com.micronauticals.springbootmicroservice.service;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-
-
-public interface IAccountsService {
-    /**
-     * Create account.
-     *
-     * @param customerDto the customer dto
-     */
-    void createAccount(CustomerDto customerDto);
-
-    /**
-     * Fetch account customer dto.
-     *
-     * @param mobileNumber the mobile number
-     * @return the customer dto
-     */
-    CustomerDto fetchAccount(String mobileNumber);
-
-    /**
-     * Update account boolean.
-     *
-     * @param customerDto the customer dto
-     * @return the boolean
-     */
-    boolean updateAccount(CustomerDto customerDto);
-
-    /**
-     * Delete account boolean.
-     *
-     * @param mobileNumber the mobile number
-     * @return the boolean
-     */
-    boolean deleteAccount(String mobileNumber);
-}
Index: V1/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V1/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties b/V1/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V1/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-
-@Data
-@AllArgsConstructor
-public class ResponseDto {
-    private String statusCode;
-    private String statusMessage;
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.cards_microservice.entity;
-
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Getter;
-import lombok.Setter;
-import lombok.ToString;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-
-import java.time.LocalDateTime;
-
-@MappedSuperclass
-@EntityListeners(AuditingEntityListener.class)
-@Getter @Setter @ToString
-public class BaseEntity {
-
-    @CreatedDate
-    @Column(updatable = false)
-    private LocalDateTime createdAt;
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedDate
-    @Column(insertable = false)
-    private LocalDateTime updatedAt;
-
-    @LastModifiedBy
-    @Column(insertable = false)
-    private String updatedBy;
-
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.loansmicroservice.constants;
-
-public class LoansConstants {
-
-    private LoansConstants() {
-        // restrict instantiation
-    }
-
-    public static final String  HOME_LOAN = "Home Loan";
-    public static final int  NEW_LOAN_LIMIT = 1_00_000;
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Loan created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,165 +0,0 @@
-package com.micronauticals.loansmicroservice.controller;
-
-import com.micronauticals.loansmicroservice.constants.LoansConstants;
-import com.micronauticals.loansmicroservice.dto.ErrorResponseDto;
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-import com.micronauticals.loansmicroservice.dto.ResponseDto;
-import com.micronauticals.loansmicroservice.service.ILoansService;
-import io.swagger.v3.oas.annotations.Operation;
-import io.swagger.v3.oas.annotations.media.Content;
-import io.swagger.v3.oas.annotations.media.Schema;
-import io.swagger.v3.oas.annotations.responses.ApiResponse;
-import io.swagger.v3.oas.annotations.responses.ApiResponses;
-import io.swagger.v3.oas.annotations.tags.Tag;
-import jakarta.validation.Valid;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-@Tag(
-        name = "CRUD REST APIs for Loans in EazyBank",
-        description = "CRUD REST APIs in EazyBank to CREATE, UPDATE, FETCH AND DELETE loan details"
-)
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-@AllArgsConstructor
-@Validated
-public class LoansController {
-
-    private ILoansService iLoansService;
-
-    @Operation(
-            summary = "Create Loan REST API",
-            description = "REST API to create new loan inside EazyBank"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "201",
-                    description = "HTTP Status CREATED"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PostMapping("/create")
-    public ResponseEntity<ResponseDto> createLoan(@RequestParam
-                                                  @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                  String mobileNumber) {
-        iLoansService.createLoan(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(LoansConstants.STATUS_201, LoansConstants.MESSAGE_201));
-    }
-
-    @Operation(
-            summary = "Fetch Loan Details REST API",
-            description = "REST API to fetch loan details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @GetMapping("/fetch")
-    public ResponseEntity<LoansDto> fetchLoanDetails(@RequestParam
-                                                     @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                     String mobileNumber) {
-        LoansDto loansDto = iLoansService.fetchLoan(mobileNumber);
-        return ResponseEntity.status(HttpStatus.OK).body(loansDto);
-    }
-
-    @Operation(
-            summary = "Update Loan Details REST API",
-            description = "REST API to update loan details based on a loan number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PutMapping("/update")
-    public ResponseEntity<ResponseDto> updateLoanDetails(@Valid @RequestBody LoansDto loansDto) {
-
-
-        boolean isUpdated = iLoansService.updateLoan(loansDto);
-        if (isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(LoansConstants.STATUS_200, LoansConstants.MESSAGE_200));
-        } else {
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(LoansConstants.STATUS_417, LoansConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @Operation(
-            summary = "Delete Loan Details REST API",
-            description = "REST API to delete Loan details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @DeleteMapping("/delete")
-    public ResponseEntity<ResponseDto> deleteLoanDetails(@RequestParam
-                                                         @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                         String mobileNumber) {
-        boolean isDeleted = iLoansService.deleteLoan(mobileNumber);
-        if(isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(LoansConstants.STATUS_200, LoansConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(LoansConstants.STATUS_417, LoansConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,20 +0,0 @@
-package com.micronauticals.springbootmicroservice.constants;
-
-public final class AccountsConstants {
-
-    public static final String STATUS_500 = "500";
-
-    private AccountsConstants(){
-
-    }
-    public static final String  SAVINGS = "Savings";
-    public static final String  ADDRESS = "123 Main Street, New York";
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Account created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-
-}
Index: V1/cards_microservice/pom.xml
===================================================================
diff --git a/V1/cards_microservice/pom.xml b/V1/cards_microservice/pom.xml
deleted file mode 100644
--- a/V1/cards_microservice/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,120 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.3</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>cards_microservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>cards_microservice</name>
-    <description>cards_microservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-    </properties>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-            <optional>true</optional>
-        </dependency>
-
-        <dependency>
-            <groupId>org.jetbrains</groupId>
-            <artifactId>annotations</artifactId>
-            <version>26.0.1</version>
-            <scope>compile</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>jakarta.validation</groupId>
-            <artifactId>jakarta.validation-api</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-annotations-jakarta</artifactId>
-            <version>2.2.28</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <image>
-                        <name>prabal864/java-spring:Cards</name>
-                    </image>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/impl/LoansServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,86 +0,0 @@
-package com.micronauticals.loansmicroservice.impl;
-
-import com.micronauticals.loansmicroservice.constants.LoansConstants;
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-import com.micronauticals.loansmicroservice.entity.Loans;
-import com.micronauticals.loansmicroservice.exception.LoanAlreadyExistsException;
-import com.micronauticals.loansmicroservice.exception.ResourceNotFoundException;
-import com.micronauticals.loansmicroservice.mapper.LoansMapper;
-import com.micronauticals.loansmicroservice.repository.LoansRepository;
-import com.micronauticals.loansmicroservice.service.ILoansService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-import java.util.Optional;
-import java.util.Random;
-
-
-@Service
-@AllArgsConstructor
-public class LoansServiceImpl implements ILoansService {
-
-    private LoansRepository loansRepository;
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-
-    private Loans createNewLoan(String mobileNumber){
-        Loans newLoan = new Loans();
-        long randomLoanNumber = 100000000000L + new Random().nextInt(900000000);
-        newLoan.setLoanNumber(Long.toString(randomLoanNumber));
-        newLoan.setMobileNumber(mobileNumber);
-        newLoan.setLoanType(LoansConstants.HOME_LOAN);
-        newLoan.setTotalLoan(LoansConstants.NEW_LOAN_LIMIT);
-        newLoan.setAmountPaid(0);
-        newLoan.setOutstandingAmount(LoansConstants.NEW_LOAN_LIMIT);
-        return newLoan;
-    }
-
-    @Override
-    public void createLoan(String mobileNumber) {
-        Optional<Loans> optionalLoans = loansRepository.findByMobileNumber(mobileNumber);
-        if(optionalLoans.isPresent()){
-            throw new LoanAlreadyExistsException("Loan already exists for the given mobile number");
-        }
-        loansRepository.save(createNewLoan(mobileNumber));
-    }
-
-    /**
-     * @param mobileNumber - Input mobile Number
-     * @return LoansDto
-     */
-    @Override
-    public LoansDto fetchLoan(String mobileNumber) {
-        Loans loans = loansRepository.findByMobileNumber((mobileNumber)).orElseThrow(
-                () -> new ResourceNotFoundException("Loan","LoanNumber",mobileNumber)
-        );
-        return LoansMapper.mapToLoansDto(loans,new LoansDto());
-    }
-
-    /**
-     * @param loansDto - LoansDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    @Override
-    public boolean updateLoan(LoansDto loansDto) {
-        Loans loans = loansRepository.findByLoanNumber(loansDto.getLoanNumber()).orElseThrow(
-                () -> new ResourceNotFoundException("Loan", "LoanNumber", loansDto.getLoanNumber()));
-        LoansMapper.mapToLoans(loansDto, loans);
-        loansRepository.save(loans);
-        return  true;
-    }
-
-    /**
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of loan details is successful or not
-     */
-    @Override
-    public boolean deleteLoan(String mobileNumber) {
-        Loans loans = loansRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Loan", "mobileNumber", mobileNumber)
-        );
-        loansRepository.deleteById(loans.getLoanId());
-        return true;
-    }
-
-}
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/accounts.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-build:
-  version: "0.0.1"
-
-accounts:
-  message: "Welcome to Accounts Microservice"
-  contactDetails:
-    email: "pps@test.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "123-456-7890"
-    - "098-765-4321"
-
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/constants/AccountsConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,20 +0,0 @@
-package com.micronauticals.springbootmicroservice.constants;
-
-public final class AccountsConstants {
-
-    public static final String STATUS_500 = "500";
-
-    private AccountsConstants(){
-
-    }
-    public static final String  SAVINGS = "Savings";
-    public static final String  ADDRESS = "123 Main Street, New York";
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Account created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,12 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-
-
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-import java.util.List;
-import java.util.Map;
-
-@ConfigurationProperties(prefix = "accounts")
-public record AccountsContactInfoDto(String message, Map<String, String> contactDetails, List<String> onCallSupport) {
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsContactInfoDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-
-
-import lombok.Getter;
-import lombok.Setter;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-import java.util.List;
-import java.util.Map;
-
-@ConfigurationProperties(prefix = "accounts")
-@Getter
-@Setter
-public class AccountsContactInfoDto {
-    private String message;
-    private Map<String, String> contactDetails;
-    private List<String> onCallSupport;
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/mapper/CardsMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,29 +0,0 @@
-package com.micronauticals.cards_microservice.mapper;
-
-
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.entity.Cards;
-
-public class CardsMapper {
-
-    public static CardsDto mapToCardsDto(Cards cards, CardsDto cardsDto) {
-        cardsDto.setCardNumber(cards.getCardNumber());
-        cardsDto.setCardType(cards.getCardType());
-        cardsDto.setMobileNumber(cards.getMobileNumber());
-        cardsDto.setTotalLimit(cards.getTotalLimit());
-        cardsDto.setAvailableAmount(cards.getAvailableAmount());
-        cardsDto.setAmountUsed(cards.getAmountUsed());
-        return cardsDto;
-    }
-
-    public static Cards mapToCards(CardsDto cardsDto, Cards cards) {
-        cards.setCardNumber(cardsDto.getCardNumber());
-        cards.setCardType(cardsDto.getCardType());
-        cards.setMobileNumber(cardsDto.getMobileNumber());
-        cards.setTotalLimit(cardsDto.getTotalLimit());
-        cards.setAvailableAmount(cardsDto.getAvailableAmount());
-        cards.setAmountUsed(cardsDto.getAmountUsed());
-        return cards;
-    }
-
-}
Index: V1/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V1/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties b/V1/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V1/Accounts_Microservice/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: V1/cards_microservice/src/main/resources/application_prod.yaml
===================================================================
diff --git a/V1/cards_microservice/src/main/resources/application_prod.yaml b/V1/cards_microservice/src/main/resources/application_prod.yaml
deleted file mode 100644
--- a/V1/cards_microservice/src/main/resources/application_prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-accounts:
-  message: "Welcome to PROD environment Cards Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: src/main/resources/application.yaml
===================================================================
diff --git a/src/main/resources/application.yaml b/src/main/resources/application.yaml
deleted file mode 100644
--- a/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,44 +0,0 @@
-server:
-<<<<<<< HEAD
-  port: 8081
-
-spring:
-    application:
-      name: SpringBootMicroservice
-    datasource:
-        url: jdbc:h2:mem:springbootdb
-        username: sa
-        password: ''
-        driver-class-name: org.h2.Driver
-    jpa:
-        hibernate:
-          ddl-auto: update
-        show-sql: true
-    h2:
-        console:
-          enabled: true
-
-
-
-
-
-
-
-
-=======
-  port: 8083
-spring:
-  datasource:
-    url: jdbc:h2:mem:testdb
-    driverClassName: org.h2.Driver
-    username: sa
-    password: ''
-  h2:
-    console:
-      enabled: true
-  jpa:
-    database-platform: org.hibernate.dialect.H2Dialect
-    hibernate:
-      ddl-auto: update
-    show-sql: true
->>>>>>> origin/Cards_Microservice
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/CardsDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,53 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-import io.swagger.v3.oas.annotations.media.Schema;
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import jakarta.validation.constraints.Positive;
-import jakarta.validation.constraints.PositiveOrZero;
-import lombok.*;
-
-@Schema(name = "Cards",
-        description = "Schema to hold Card information"
-)
-@Data
-public class CardsDto {
-
-    @NotEmpty(message = "Mobile Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile Number must be 10 digits")
-    @Schema(
-            description = "Mobile Number of Customer", example = "4354437687"
-    )
-    private String mobileNumber;
-
-    @NotEmpty(message = "Card Number can not be a null or empty")
-    @Pattern(regexp="(^$|[0-9]{12})",message = "CardNumber must be 12 digits")
-    @Schema(
-            description = "Card Number of the customer", example = "100646930341"
-    )
-    private String cardNumber;
-
-    @NotEmpty(message = "CardType can not be a null or empty")
-    @Schema(
-            description = "Type of the card", example = "Credit Card"
-    )
-    private String cardType;
-
-    @Positive(message = "Total card limit should be greater than zero")
-    @Schema(
-            description = "Total amount limit available against a card", example = "100000"
-    )
-    private int totalLimit;
-
-    @PositiveOrZero(message = "Total amount used should be equal or greater than zero")
-    @Schema(
-            description = "Total amount used by a Customer", example = "1000"
-    )
-    private int amountUsed;
-
-    @PositiveOrZero(message = "Total available amount should be equal or greater than zero")
-    @Schema(
-            description = "Total available amount against a card", example = "90000"
-    )
-    private int availableAmount;
-
-}
Index: V1/cards_microservice/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V1/cards_microservice/.mvn/wrapper/maven-wrapper.properties b/V1/cards_microservice/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V1/cards_microservice/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: src/main/java/com/micronauticals/cards_microservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/audit/AuditAwareImpl.java b/src/main/java/com/micronauticals/cards_microservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,20 +0,0 @@
-package com.micronauticals.cards_microservice.audit;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-
-import java.util.Optional;
-
-@Component("auditAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-
-    /**
-     * Returns the current auditor of the application.
-     *
-     * @return the current auditor.
-     */
-    @Override
-    public Optional<String> getCurrentAuditor() {
-        return Optional.of("CARDS_MS");
-    }
-
-}
\ No newline at end of file
Index: V1/Accounts_Microservice/README.md
===================================================================
diff --git a/V1/Accounts_Microservice/README.md b/V1/Accounts_Microservice/README.md
deleted file mode 100644
--- a/V1/Accounts_Microservice/README.md	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,1 +0,0 @@
-# SpringBootProject
Index: .idea/SpringBootMicroservice-Config.iml
===================================================================
diff --git a/.idea/SpringBootMicroservice-Config.iml b/.idea/SpringBootMicroservice-Config.iml
deleted file mode 100644
--- a/.idea/SpringBootMicroservice-Config.iml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: V2_Cloud_Config/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java b/V2_Cloud_Config/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/test/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplicationTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.loansmicroservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class LoansmicroserviceApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V1/LoansMicroservice/src/main/resources/application_qa.yaml
===================================================================
diff --git a/V1/LoansMicroservice/src/main/resources/application_qa.yaml b/V1/LoansMicroservice/src/main/resources/application_qa.yaml
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/resources/application_qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-accounts:
-  message: "Welcome to QA environment Loans Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.loansmicroservice.audit;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-import java.util.Optional;
-
-@Component("auditorAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-    @Override
-    public Optional<String> getCurrentAuditor() {
-        return Optional.of("LOANS_MS");
-    }
-}
-
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/constants/LoansConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.loansmicroservice.constants;
-
-public class LoansConstants {
-
-    private LoansConstants() {
-        // restrict instantiation
-    }
-
-    public static final String  HOME_LOAN = "Home Loan";
-    public static final int  NEW_LOAN_LIMIT = 1_00_000;
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Loan created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/ResourceNotFoundException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-
-
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.NOT_FOUND)
-public class ResourceNotFoundException extends RuntimeException {
-
-    public ResourceNotFoundException(String resrouceName, String fieldName, String message) {
-        super(String.format("%s not found with %s : '%s'", resrouceName, fieldName, message));
-    }
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.loansmicroservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data
-@AllArgsConstructor
-@Schema(
-        name = "ErrorResponse",
-        description = "Schema to hold error response information"
-)
-public class ErrorResponseDto {
-
-    @Schema(
-            description = "API path invoked by client"
-    )
-    private  String apiPath;
-
-    @Schema(
-            description = "Error code representing the error happened"
-    )
-    private HttpStatus errorCode;
-
-    @Schema(
-            description = "Error message representing the error happened"
-    )
-    private  String errorMessage;
-
-    @Schema(
-            description = "Time representing when the error happened"
-    )
-    private LocalDateTime errorTime;
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/service/ICardsService.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,35 +0,0 @@
-package com.micronauticals.cards_microservice.service;
-
-
-import com.micronauticals.cards_microservice.dto.CardsDto;
-
-public interface ICardsService {
-
-    /**
-     *
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    void createCard(String mobileNumber);
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     *  @return Card Details based on a given mobileNumber
-     */
-    CardsDto fetchCard(String mobileNumber);
-
-    /**
-     *
-     * @param cardsDto - CardsDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    boolean updateCard(CardsDto cardsDto);
-
-    /**
-     *
-     * @param mobileNumber - Input Mobile Number
-     * @return boolean indicating if the delete of card details is successful or not
-     */
-    boolean deleteCard(String mobileNumber);
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/impl/CardsServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,92 +0,0 @@
-package com.micronauticals.cards_microservice.impl;
-
-import com.micronauticals.cards_microservice.constants.CardsConstants;
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.entity.Cards;
-import com.micronauticals.cards_microservice.exception.CardAlreadyExistsException;
-import com.micronauticals.cards_microservice.exception.ResourceNotFoundException;
-import com.micronauticals.cards_microservice.mapper.CardsMapper;
-import com.micronauticals.cards_microservice.repository.CardsRepository;
-import com.micronauticals.cards_microservice.service.ICardsService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-
-import java.util.Optional;
-import java.util.Random;
-
-@Service
-@AllArgsConstructor
-public class CardsServiceImpl implements ICardsService {
-
-    private CardsRepository cardsRepository;
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    @Override
-    public void createCard(String mobileNumber) {
-        Optional<Cards> optionalCards= cardsRepository.findByMobileNumber(mobileNumber);
-        if(optionalCards.isPresent()){
-            throw new CardAlreadyExistsException("Card already registered with given mobileNumber "+mobileNumber);
-        }
-        cardsRepository.save(createNewCard(mobileNumber));
-    }
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     * @return the new card details
-     */
-    private Cards createNewCard(String mobileNumber) {
-        Cards newCard = new Cards();
-        long randomCardNumber = 100000000000L + new Random().nextInt(900000000);
-        newCard.setCardNumber(Long.toString(randomCardNumber));
-        newCard.setMobileNumber(mobileNumber);
-        newCard.setCardType(CardsConstants.CREDIT_CARD);
-        newCard.setTotalLimit(CardsConstants.NEW_CARD_LIMIT);
-        newCard.setAmountUsed(0);
-        newCard.setAvailableAmount(CardsConstants.NEW_CARD_LIMIT);
-        return newCard;
-    }
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     * @return Card Details based on a given mobileNumber
-     */
-    @Override
-    public CardsDto fetchCard(String mobileNumber) {
-        Cards cards = cardsRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "mobileNumber", mobileNumber)
-        );
-        return CardsMapper.mapToCardsDto(cards, new CardsDto());
-    }
-
-    /**
-     *
-     * @param cardsDto - CardsDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    @Override
-    public boolean updateCard(CardsDto cardsDto) {
-        Cards cards = cardsRepository.findByCardNumber(cardsDto.getCardNumber()).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "CardNumber", cardsDto.getCardNumber()));
-        CardsMapper.mapToCards(cardsDto, cards);
-        cardsRepository.save(cards);
-        return  true;
-    }
-
-    /**
-     * @param mobileNumber - Input MobileNumber
-     * @return boolean indicating if the delete of card details is successful or not
-     */
-    @Override
-    public boolean deleteCard(String mobileNumber) {
-        Cards cards = cardsRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "mobileNumber", mobileNumber)
-        );
-        cardsRepository.deleteById(cards.getCardId());
-        return true;
-    }
-
-
-}
Index: V2_Cloud_Config/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties b/V2_Cloud_Config/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/.mvn/wrapper/maven-wrapper.properties	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#   http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing,
-# software distributed under the License is distributed on an
-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-# KIND, either express or implied.  See the License for the
-# specific language governing permissions and limitations
-# under the License.
-wrapperVersion=3.3.2
-distributionType=only-script
-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.9/apache-maven-3.9.9-bin.zip
Index: src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java b/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/controllers/AccountsController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,69 +0,0 @@
-package com.micronauticals.springbootmicroservice.controllers;
-import com.micronauticals.springbootmicroservice.constants.AccountsConstants;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.dto.ResponseDto;
-import com.micronauticals.springbootmicroservice.service.IAccountsService;
-import jakarta.validation.Valid;
-import lombok.AllArgsConstructor;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-@AllArgsConstructor
-@Validated
-public class AccountsController {
-
-    private IAccountsService iAccountsService;
-
-    @PostMapping("/createAccount")
-   public ResponseEntity<ResponseDto> createAccount(@Valid @RequestBody CustomerDto customerDto ){
-        iAccountsService.createAccount(customerDto);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(AccountsConstants.STATUS_201, "Account created successfully"));
-   }
-
-   @GetMapping("/fetchAccountDetails")
-   public ResponseEntity<CustomerDto> fetchAccountDetails(@RequestParam String mobileNumber){
-        CustomerDto customerDto = iAccountsService.fetchAccount(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.OK)
-                .body(customerDto);
-   }
-
-   @PutMapping("/updateAccount")
-    public ResponseEntity<ResponseDto> updateAccountDetails(@Valid @RequestBody CustomerDto customerDto){
-        boolean isUpdated = iAccountsService.updateAccount(customerDto);
-        if(isUpdated){
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(AccountsConstants.STATUS_200, AccountsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(AccountsConstants.STATUS_417, AccountsConstants.MESSAGE_417_UPDATE));
-        }
-   }
-
-   @DeleteMapping("/deleteAccount")
-    public ResponseEntity<ResponseDto> deleteAccount(@RequestParam
-                                                        String mobileNumber){
-        boolean isDeleted = iAccountsService.deleteAccount(mobileNumber);
-        if(isDeleted){
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(AccountsConstants.STATUS_200, AccountsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(AccountsConstants.STATUS_417, AccountsConstants.MESSAGE_417_DELETE));
-        }
-   }
-
-
-}
Index: Dockerfile
===================================================================
diff --git a/Dockerfile b/Dockerfile
deleted file mode 100644
--- a/Dockerfile	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,25 +0,0 @@
-FROM openjdk:21
-
-# Use an official OpenJDK runtime as a parent image
-
-# Set the maintainer label
-LABEL maintainer="PPS"
-
-# Set the working directory inside the container
-WORKDIR /app
-
-COPY mvnw .
-COPY mvnw.cmd .
-COPY .mvn .mvn
-# Copy the Maven project files to the container
-COPY pom.xml .
-COPY src ./src
-
-# Build the project to create the JAR file
-RUN ./mvnw package
-
-# Copy the generated JAR file to the container
-COPY target/AccountsMicroservice-0.0.1-SNAPSHOT.jar accounts-microservice-0.0.1-SNAPSHOT.jar
-
-# Define the entry point for the container
-ENTRYPOINT ["java", "-jar", "/app/accounts-microservice-0.0.1-SNAPSHOT.jar"]
\ No newline at end of file
Index: V1/Accounts_Microservice/Dockerfile
===================================================================
diff --git a/V1/Accounts_Microservice/Dockerfile b/V1/Accounts_Microservice/Dockerfile
deleted file mode 100644
--- a/V1/Accounts_Microservice/Dockerfile	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,25 +0,0 @@
-FROM openjdk:21
-
-# Use an official OpenJDK runtime as a parent image
-
-# Set the maintainer label
-LABEL maintainer="PPS"
-
-# Set the working directory inside the container
-WORKDIR /app
-
-COPY mvnw .
-COPY mvnw.cmd .
-COPY .mvn .mvn
-# Copy the Maven project files to the container
-COPY pom.xml .
-COPY src ./src
-
-# Build the project to create the JAR file
-RUN ./mvnw package
-
-# Copy the generated JAR file to the container
-COPY target/AccountsMicroservice-0.0.1-SNAPSHOT.jar accounts-microservice-0.0.1-SNAPSHOT.jar
-
-# Define the entry point for the container
-ENTRYPOINT ["java", "-jar", "/app/accounts-microservice-0.0.1-SNAPSHOT.jar"]
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: V2_Cloud_Config/LoansMicroservice/src/main/resources/application_prod.yaml
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/resources/application_prod.yaml b/V2_Cloud_Config/LoansMicroservice/src/main/resources/application_prod.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/resources/application_prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-accounts:
-  message: "Welcome to PROD environment Loans Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,75 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import com.micronauticals.cards_microservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-        Map<String, String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorList = ex.getBindingResult().getAllErrors();
-
-        validationErrorList.forEach((error) -> {
-            String fieldName = ((FieldError) error).getField();
-            String validationMsg = error.getDefaultMessage();
-            validationErrors.put(fieldName, validationMsg);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException(Exception exception,
-                                                                  WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
-                .body(errorResponseDTO);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> handleResourceNotFoundException(ResourceNotFoundException exception,
-                                                                            WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.NOT_FOUND);
-    }
-
-    @ExceptionHandler(CardAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleCardAlreadyExistsException(CardAlreadyExistsException exception,
-                                                                             WebRequest webRequest){
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.BAD_REQUEST);
-    }
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/LoansmicroserviceApplication.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-package com.micronauticals.loansmicroservice;
-
-import com.micronauticals.loansmicroservice.dto.LoansContactInfoDto;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-@EnableJpaAuditing(auditorAwareRef = "auditorAwareImpl")
-@EnableConfigurationProperties(LoansContactInfoDto.class)
-public class LoansmicroserviceApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(LoansmicroserviceApplication.class, args);
-    }
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.loansmicroservice.entity;
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Getter;
-import lombok.Setter;
-import lombok.ToString;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-
-import java.time.LocalDateTime;
-
-
-@MappedSuperclass
-@Getter@Setter@ToString
-@EntityListeners(AuditingEntityListener.class)
-public class BaseEntity {
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedBy
-    @Column(updatable = false)
-    private String updatedBy;
-
-    @CreatedDate
-    @Column(updatable = false)
-    private LocalDateTime createdDate;
-
-    @LastModifiedDate
-    @Column(updatable = false)
-    private LocalDateTime updatedDate;
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java b/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,28 +0,0 @@
-package com.micronauticals.loansmicroservice.mapper;
-
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-import com.micronauticals.loansmicroservice.entity.Loans;
-
-public class LoansMapper {
-
-    public static LoansDto mapToLoansDto(Loans loans, LoansDto loansDto){
-        loansDto.setLoanNumber(loans.getLoanNumber());
-        loansDto.setLoanType(loans.getLoanType());
-        loansDto.setMobileNumber(loans.getMobileNumber());
-        loansDto.setTotalLoan(loans.getTotalLoan());
-        loansDto.setAmountPaid(loans.getAmountPaid());
-        loansDto.setOutstandingAmount(loans.getOutstandingAmount());
-        return loansDto;
-    }
-
-    public static Loans mapToLoans(LoansDto loansDto, Loans loans) {
-        loans.setLoanNumber(loansDto.getLoanNumber());
-        loans.setLoanType(loansDto.getLoanType());
-        loans.setMobileNumber(loansDto.getMobileNumber());
-        loans.setTotalLoan(loansDto.getTotalLoan());
-        loans.setAmountPaid(loansDto.getAmountPaid());
-        loans.setOutstandingAmount(loansDto.getOutstandingAmount());
-        return loans;
-    }
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/resources/application_qa.yaml
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/resources/application_qa.yaml b/V2_Cloud_Config/LoansMicroservice/src/main/resources/application_qa.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/resources/application_qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-accounts:
-  message: "Welcome to QA environment Loans Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V1/LoansMicroservice/.gitignore
===================================================================
diff --git a/V1/LoansMicroservice/.gitignore b/V1/LoansMicroservice/.gitignore
deleted file mode 100644
--- a/V1/LoansMicroservice/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-
-import lombok.*;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data
-@Setter
-@Getter
-@AllArgsConstructor
-@NoArgsConstructor
-public class ErrorResponseDto {
-    private String apiPath;
-    private HttpStatus errorCode;
-    private String errorMessage;
-    private LocalDateTime errorTime;
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java b/V2_Cloud_Config/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/test/java/com/micronauticals/springbootmicroservice/AccountsMicroserviceTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.springbootmicroservice;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class AccountsMicroserviceTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,24 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Schema(
-        name = "Response",
-        description = "Schema to hold successful response information"
-)
-@Data @AllArgsConstructor
-public class ResponseDto {
-
-    @Schema(
-            description = "Status code in the response"
-    )
-    private String statusCode;
-
-    @Schema(
-            description = "Status message in the response"
-    )
-    private String statusMsg;
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/entity/Cards.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,30 +0,0 @@
-package com.micronauticals.cards_microservice.entity;
-
-import jakarta.persistence.*;
-import lombok.*;
-
-@Entity
-@Getter
-@Setter
-@ToString
-@AllArgsConstructor
-@NoArgsConstructor
-public class Cards extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long cardId;
-
-    private String mobileNumber;
-
-    private String cardNumber;
-
-    private String cardType;
-
-    private int totalLimit;
-
-    private int amountUsed;
-
-    private int availableAmount;
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,22 +0,0 @@
-package com.micronauticals.springbootmicroservice.mapper;
-import com.micronauticals.springbootmicroservice.dto.AccountsDto;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-
-
-public class AccountsMapper {
-
-    public static AccountsDto mapToAccountsDto(Accounts accounts, AccountsDto accountsDto ){
-        accountsDto.setAccountNumber(accounts.getAccountNumber());
-        accountsDto.setAccountType(accounts.getAccountType());
-        accountsDto.setBranchAddress(accounts.getBranchAddress());
-        return accountsDto;
-    }
-
-    public static Accounts mapToAccounts(AccountsDto accountsDto, Accounts accounts){
-        accounts.setAccountNumber(accountsDto.getAccountNumber());
-        accounts.setAccountType(accountsDto.getAccountType());
-        accounts.setBranchAddress(accountsDto.getBranchAddress());
-        return accounts;
-    }
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/resources/schema.sql
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/schema.sql b/V2_Cloud_Config/Accounts_Microservice/src/main/resources/schema.sql
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,22 +0,0 @@
-CREATE TABLE IF NOT EXISTS `customer` (
-    `customer_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `name` varchar(100) NOT NULL,
-    `email` varchar(100) NOT NULL,
-    `mobile_number` varchar(20) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL
-    );
-
-CREATE TABLE IF NOT EXISTS `accounts` (
-    `account_id` BIGINT AUTO_INCREMENT PRIMARY KEY,
-    `customer_id` BIGINT NOT NULL,
-    `account_number` BIGINT NOT NULL,
-    `branch_address` varchar(200) NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-    FOREIGN KEY (`customer_id`) REFERENCES `customer`(`customer_id`)
-    );
\ No newline at end of file
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-qa.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-qa.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-qa.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/accounts-qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-
-build:
-  version: "0.0.2"
-
-accounts:
-  message: "Welcome to QA environment Accounts Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_prod.yaml
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_prod.yaml b/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_prod.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/resources/application_prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-accounts:
-  message: "Welcome to PROD environment Accounts Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: src/main/java/com/micronauticals/cards_microservice/entity/BaseEntity.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/entity/BaseEntity.java b/src/main/java/com/micronauticals/cards_microservice/entity/BaseEntity.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/entity/BaseEntity.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,38 +0,0 @@
-package com.micronauticals.cards_microservice.entity;
-
-import jakarta.persistence.Column;
-import jakarta.persistence.EntityListeners;
-import jakarta.persistence.MappedSuperclass;
-import lombok.Getter;
-import lombok.Setter;
-import lombok.ToString;
-import org.springframework.data.annotation.CreatedBy;
-import org.springframework.data.annotation.CreatedDate;
-import org.springframework.data.annotation.LastModifiedBy;
-import org.springframework.data.annotation.LastModifiedDate;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
-
-import java.time.LocalDateTime;
-
-@MappedSuperclass
-@EntityListeners(AuditingEntityListener.class)
-@Getter @Setter @ToString
-public class BaseEntity {
-
-    @CreatedDate
-    @Column(updatable = false)
-    private LocalDateTime createdAt;
-
-    @CreatedBy
-    @Column(updatable = false)
-    private String createdBy;
-
-    @LastModifiedDate
-    @Column(insertable = false)
-    private LocalDateTime updatedAt;
-
-    @LastModifiedBy
-    @Column(insertable = false)
-    private String updatedBy;
-
-}
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,45 +0,0 @@
-package com.micronauticals.cards_microservice;
-
-import com.micronauticals.cards_microservice.dto.CardsContactInfoDto;
-import io.swagger.v3.oas.annotations.ExternalDocumentation;
-import io.swagger.v3.oas.annotations.OpenAPIDefinition;
-import io.swagger.v3.oas.annotations.info.Contact;
-import io.swagger.v3.oas.annotations.info.Info;
-import io.swagger.v3.oas.annotations.info.License;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-/*@ComponentScans({ @ComponentScan("com.eazybytes.cards.controller") })
-@EnableJpaRepositories("com.eazybytes.cards.repository")
-@EntityScan("com.eazybytes.cards.model")*/
-@EnableJpaAuditing(auditorAwareRef = "auditAwareImpl")
-@OpenAPIDefinition(
-        info = @Info(
-                title = "Cards microservice REST API Documentation",
-                description = "EazyBank Cards microservice REST API Documentation",
-                version = "v1",
-                contact = @Contact(
-                        name = "Madan Reddy",
-                        email = "tutor@eazybytes.com",
-                        url = "https://www.eazybytes.com"
-                ),
-                license = @License(
-                        name = "Apache 2.0",
-                        url = "https://www.eazybytes.com"
-                )
-        ),
-        externalDocs = @ExternalDocumentation(
-                description = "EazyBank Cards microservice REST API Documentation",
-                url = "https://www.eazybytes.com/swagger-ui.html"
-        )
-)
-@EnableConfigurationProperties(CardsContactInfoDto.class)
-public class CardsMicroserviceApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(CardsMicroserviceApplication.class, args);
-    }
-}
\ No newline at end of file
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/exception/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,75 +0,0 @@
-package com.micronauticals.cards_microservice.exception;
-
-import com.micronauticals.cards_microservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-        Map<String, String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorList = ex.getBindingResult().getAllErrors();
-
-        validationErrorList.forEach((error) -> {
-            String fieldName = ((FieldError) error).getField();
-            String validationMsg = error.getDefaultMessage();
-            validationErrors.put(fieldName, validationMsg);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException(Exception exception,
-                                                                  WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
-                .body(errorResponseDTO);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> handleResourceNotFoundException(ResourceNotFoundException exception,
-                                                                            WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.NOT_FOUND);
-    }
-
-    @ExceptionHandler(CardAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleCardAlreadyExistsException(CardAlreadyExistsException exception,
-                                                                             WebRequest webRequest){
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.BAD_REQUEST);
-    }
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.springbootmicroservice.audit;
-import org.jetbrains.annotations.NotNull;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-import java.util.Optional;
-
-
-@Component("auditAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-
-    @Override
-    public @NotNull Optional<String> getCurrentAuditor() {
-        return Optional.of("ACCOUNTS_MS");
-    }
-
-}
Index: V2_Cloud_Config/LoansMicroservice/src/main/resources/Schema.sql
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/src/main/resources/Schema.sql b/V2_Cloud_Config/LoansMicroservice/src/main/resources/Schema.sql
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/src/main/resources/Schema.sql	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,14 +0,0 @@
-CREATE TABLE IF NOT EXISTS `cards` (
-   `card_id` int NOT NULL AUTO_INCREMENT,
-   `mobile_number` varchar(15) NOT NULL,
-    `card_number` varchar(100) NOT NULL,
-    `card_type` varchar(100) NOT NULL,
-    `total_limit` int NOT NULL,
-    `amount_used` int NOT NULL,
-    `available_amount` int NOT NULL,
-    `created_at` date NOT NULL,
-    `created_by` varchar(20) NOT NULL,
-    `updated_at` date DEFAULT NULL,
-    `updated_by` varchar(20) DEFAULT NULL,
-    PRIMARY KEY (`card_id`)
-    );
Index: V2_Cloud_Config/cloud_config/src/main/resources/application.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/application.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/application.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,46 +0,0 @@
-spring:
-  application:
-    name: "cloud_config"
-
-  profiles:
-    active: git
-
-  cloud:
-    config:
-      server:
-        git:
-          uri: "https://github.com/Prabal864/Config.git"
-          default-label: main
-          timeout: 5
-          clone-on-start: true
-          force-pull: true
-
-  rabbitmq:
-    host: "rabbit"
-    port: 5672
-    password: "guest"
-    username: "guest"
-
-#        native:
-#          search-locations: "file:///D://Coding//Java Course//Spring-Project//SpringBootMicroservice-Config//V2_Cloud_Config//cloud_config//src//main//resources//config"
-management:
-  endpoints:
-    web:
-      exposure:
-        include: "*"
-  health:
-    readiness-state:
-      enabled: true
-    liveness-state:
-      enabled: true
-  endpoint:
-    health:
-      probes:
-        enabled: true
-
-
-encrypt:
-  key: "17332d2hd2uedubc73yc2be393exy293exb723ehxb23"
-
-server:
-  port: 8084
Index: src/main/java/com/micronauticals/cards_microservice/entity/Cards.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/entity/Cards.java b/src/main/java/com/micronauticals/cards_microservice/entity/Cards.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/entity/Cards.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,30 +0,0 @@
-package com.micronauticals.cards_microservice.entity;
-
-import jakarta.persistence.*;
-import lombok.*;
-
-@Entity
-@Getter
-@Setter
-@ToString
-@AllArgsConstructor
-@NoArgsConstructor
-public class Cards extends BaseEntity {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long cardId;
-
-    private String mobileNumber;
-
-    private String cardNumber;
-
-    private String cardType;
-
-    private int totalLimit;
-
-    private int amountUsed;
-
-    private int availableAmount;
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java b/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/mapper/CustomerMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,23 +0,0 @@
-package com.micronauticals.springbootmicroservice.mapper;
-
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-
-public class CustomerMapper {
-
-    public static CustomerDto mapToCustomerDto(Customer customer, CustomerDto customerDto){
-        customerDto.setName(customer.getName());
-        customerDto.setEmail(customer.getEmail());
-        customerDto.setMobileNumber(customer.getMobileNumber());
-        return customerDto;
-    }
-
-    public static Customer mapToCustomer(CustomerDto customerDto,Customer customer ){
-        customer.setName(customerDto.getName());
-        customer.setEmail(customerDto.getEmail());
-        customer.setMobileNumber(customerDto.getMobileNumber());
-        return customer;
-    }
-
-
-}
Index: src/main/java/com/micronauticals/cards_microservice/impl/CardsServiceImpl.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/impl/CardsServiceImpl.java b/src/main/java/com/micronauticals/cards_microservice/impl/CardsServiceImpl.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/impl/CardsServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,92 +0,0 @@
-package com.micronauticals.cards_microservice.impl;
-
-import com.micronauticals.cards_microservice.constants.CardsConstants;
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.entity.Cards;
-import com.micronauticals.cards_microservice.exception.CardAlreadyExistsException;
-import com.micronauticals.cards_microservice.exception.ResourceNotFoundException;
-import com.micronauticals.cards_microservice.mapper.CardsMapper;
-import com.micronauticals.cards_microservice.repository.CardsRepository;
-import com.micronauticals.cards_microservice.service.ICardsService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-
-import java.util.Optional;
-import java.util.Random;
-
-@Service
-@AllArgsConstructor
-public class CardsServiceImpl implements ICardsService {
-
-    private CardsRepository cardsRepository;
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     */
-    @Override
-    public void createCard(String mobileNumber) {
-        Optional<Cards> optionalCards= cardsRepository.findByMobileNumber(mobileNumber);
-        if(optionalCards.isPresent()){
-            throw new CardAlreadyExistsException("Card already registered with given mobileNumber "+mobileNumber);
-        }
-        cardsRepository.save(createNewCard(mobileNumber));
-    }
-
-    /**
-     * @param mobileNumber - Mobile Number of the Customer
-     * @return the new card details
-     */
-    private Cards createNewCard(String mobileNumber) {
-        Cards newCard = new Cards();
-        long randomCardNumber = 100000000000L + new Random().nextInt(900000000);
-        newCard.setCardNumber(Long.toString(randomCardNumber));
-        newCard.setMobileNumber(mobileNumber);
-        newCard.setCardType(CardsConstants.CREDIT_CARD);
-        newCard.setTotalLimit(CardsConstants.NEW_CARD_LIMIT);
-        newCard.setAmountUsed(0);
-        newCard.setAvailableAmount(CardsConstants.NEW_CARD_LIMIT);
-        return newCard;
-    }
-
-    /**
-     *
-     * @param mobileNumber - Input mobile Number
-     * @return Card Details based on a given mobileNumber
-     */
-    @Override
-    public CardsDto fetchCard(String mobileNumber) {
-        Cards cards = cardsRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "mobileNumber", mobileNumber)
-        );
-        return CardsMapper.mapToCardsDto(cards, new CardsDto());
-    }
-
-    /**
-     *
-     * @param cardsDto - CardsDto Object
-     * @return boolean indicating if the update of card details is successful or not
-     */
-    @Override
-    public boolean updateCard(CardsDto cardsDto) {
-        Cards cards = cardsRepository.findByCardNumber(cardsDto.getCardNumber()).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "CardNumber", cardsDto.getCardNumber()));
-        CardsMapper.mapToCards(cardsDto, cards);
-        cardsRepository.save(cards);
-        return  true;
-    }
-
-    /**
-     * @param mobileNumber - Input MobileNumber
-     * @return boolean indicating if the delete of card details is successful or not
-     */
-    @Override
-    public boolean deleteCard(String mobileNumber) {
-        Cards cards = cardsRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Card", "mobileNumber", mobileNumber)
-        );
-        cardsRepository.deleteById(cards.getCardId());
-        return true;
-    }
-
-
-}
Index: V2_Cloud_Config/cloud_config/src/main/resources/config/cards-qa.yaml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/resources/config/cards-qa.yaml b/V2_Cloud_Config/cloud_config/src/main/resources/config/cards-qa.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/resources/config/cards-qa.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "qa"
-
-build:
-  version: "0.0.2"
-
-cards:
-  message: "Welcome to QA environment Cards Microservice"
-  contactDetails:
-    email: "pps@QA.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "888-456-7890"
-    - "888-765-4321"
-
Index: V1/Accounts_Microservice/src/main/resources/application.yaml
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/resources/application.yaml b/V1/Accounts_Microservice/src/main/resources/application.yaml
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,49 +0,0 @@
-server:
-  port: 8081
-
-spring:
-    application:
-      name: SpringBootMicroservice
-    datasource:
-        url: jdbc:h2:mem:springbootdb
-        username: sa
-        password: ''
-        driver-class-name: org.h2.Driver
-    jpa:
-        hibernate:
-          ddl-auto: update
-        show-sql: true
-    h2:
-        console:
-          enabled: true
-    config:
-      import:
-        - "application_qa.yaml"
-        - "application_prod.yaml"
-
-    profiles:
-        active: "qa"
-
-    web:
-      resources:
-        chain:
-          strategy:
-            fixed:
-              enabled: true
-              paths: /**
-              version: "1.0.0"
-
-
-build:
-  version: "0.0.1"
-
-accounts:
-  message: "Welcome to Accounts Microservice"
-  contactDetails:
-    email: "pps@test.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "123-456-7890"
-    - "098-765-4321"
-
Index: src/main/java/com/micronauticals/cards_microservice/controller/CardsController.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/controller/CardsController.java b/src/main/java/com/micronauticals/cards_microservice/controller/CardsController.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/controller/CardsController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,164 +0,0 @@
-package com.micronauticals.cards_microservice.controller;
-
-import com.micronauticals.cards_microservice.constants.CardsConstants;
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.dto.ErrorResponseDto;
-import com.micronauticals.cards_microservice.dto.ResponseDto;
-import com.micronauticals.cards_microservice.service.ICardsService;
-import io.swagger.v3.oas.annotations.Operation;
-import io.swagger.v3.oas.annotations.media.Content;
-import io.swagger.v3.oas.annotations.media.Schema;
-import io.swagger.v3.oas.annotations.responses.ApiResponse;
-import io.swagger.v3.oas.annotations.responses.ApiResponses;
-import io.swagger.v3.oas.annotations.tags.Tag;
-import jakarta.validation.Valid;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-/**
- * @author Eazy Bytes
- */
-
-@Tag(
-        name = "CRUD REST APIs for Cards in EazyBank",
-        description = "CRUD REST APIs in EazyBank to CREATE, UPDATE, FETCH AND DELETE card details"
-)
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-@AllArgsConstructor
-@Validated
-public class CardsController {
-
-    private ICardsService iCardsService;
-
-    @Operation(
-            summary = "Create Card REST API",
-            description = "REST API to create new Card inside EazyBank"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "201",
-                    description = "HTTP Status CREATED"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PostMapping("/create")
-    public ResponseEntity<ResponseDto> createCard(@Valid @RequestParam
-                                                  @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                  String mobileNumber) {
-        iCardsService.createCard(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(CardsConstants.STATUS_201, CardsConstants.MESSAGE_201));
-    }
-
-    @Operation(
-            summary = "Fetch Card Details REST API",
-            description = "REST API to fetch card details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @GetMapping("/fetch")
-    public ResponseEntity<CardsDto> fetchCardDetails(@RequestParam
-                                                     @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                     String mobileNumber) {
-        CardsDto cardsDto = iCardsService.fetchCard(mobileNumber);
-        return ResponseEntity.status(HttpStatus.OK).body(cardsDto);
-    }
-
-    @Operation(
-            summary = "Update Card Details REST API",
-            description = "REST API to update card details based on a card number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @PutMapping("/update")
-    public ResponseEntity<ResponseDto> updateCardDetails(@Valid @RequestBody CardsDto cardsDto) {
-        boolean isUpdated = iCardsService.updateCard(cardsDto);
-        if(isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(CardsConstants.STATUS_200, CardsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(CardsConstants.STATUS_417, CardsConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @Operation(
-            summary = "Delete Card Details REST API",
-            description = "REST API to delete Card details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @DeleteMapping("/delete")
-    public ResponseEntity<ResponseDto> deleteCardDetails(@RequestParam
-                                                         @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                         String mobileNumber) {
-        boolean isDeleted = iCardsService.deleteCard(mobileNumber);
-        if(isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(CardsConstants.STATUS_200, CardsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(CardsConstants.STATUS_417, CardsConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,37 +0,0 @@
-package com.micronauticals.cards_microservice.dto;
-
-import io.swagger.v3.oas.annotations.media.Schema;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data @AllArgsConstructor
-@Schema(
-        name = "ErrorResponse",
-        description = "Schema to hold error response information"
-)
-public class ErrorResponseDto {
-
-    @Schema(
-            description = "API path invoked by client"
-    )
-    private  String apiPath;
-
-    @Schema(
-            description = "Error code representing the error happened"
-    )
-    private HttpStatus errorCode;
-
-    @Schema(
-            description = "Error message representing the error happened"
-    )
-    private  String errorMessage;
-
-    @Schema(
-            description = "Time representing when the error happened"
-    )
-    private LocalDateTime errorTime;
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java b/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/dto/ErrorResponseDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-
-import lombok.*;
-import org.springframework.http.HttpStatus;
-
-import java.time.LocalDateTime;
-
-@Data
-@Setter
-@Getter
-@AllArgsConstructor
-@NoArgsConstructor
-public class ErrorResponseDto {
-    private String apiPath;
-    private HttpStatus errorCode;
-    private String errorMessage;
-    private LocalDateTime errorTime;
-
-}
Index: V2_Cloud_Config/cards_microservice/pom.xml
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/pom.xml b/V2_Cloud_Config/cards_microservice/pom.xml
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,140 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.3</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>cards_microservice</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>cards_microservice</name>
-    <description>cards_microservice</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-        <spring-cloud.version>2024.0.0</spring-cloud.version>
-    </properties>
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>org.springframework.cloud</groupId>
-                <artifactId>spring-cloud-dependencies</artifactId>
-                <version>${spring-cloud.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-            <optional>true</optional>
-        </dependency>
-
-        <dependency>
-            <groupId>org.jetbrains</groupId>
-            <artifactId>annotations</artifactId>
-            <version>26.0.1</version>
-            <scope>compile</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.h2database</groupId>
-            <artifactId>h2</artifactId>
-            <scope>runtime</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>jakarta.validation</groupId>
-            <artifactId>jakarta.validation-api</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-annotations-jakarta</artifactId>
-            <version>2.2.28</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-config</artifactId>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <annotationProcessorPaths>
-                        <path>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </path>
-                    </annotationProcessorPaths>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <image>
-                        <name>prabal864/java-spring:Cards</name>
-                    </image>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: src/main/java/com/micronauticals/cards_microservice/mapper/CardsMapper.java
===================================================================
diff --git a/src/main/java/com/micronauticals/cards_microservice/mapper/CardsMapper.java b/src/main/java/com/micronauticals/cards_microservice/mapper/CardsMapper.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/cards_microservice/mapper/CardsMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,29 +0,0 @@
-package com.micronauticals.cards_microservice.mapper;
-
-
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.entity.Cards;
-
-public class CardsMapper {
-
-    public static CardsDto mapToCardsDto(Cards cards, CardsDto cardsDto) {
-        cardsDto.setCardNumber(cards.getCardNumber());
-        cardsDto.setCardType(cards.getCardType());
-        cardsDto.setMobileNumber(cards.getMobileNumber());
-        cardsDto.setTotalLimit(cards.getTotalLimit());
-        cardsDto.setAvailableAmount(cards.getAvailableAmount());
-        cardsDto.setAmountUsed(cards.getAmountUsed());
-        return cardsDto;
-    }
-
-    public static Cards mapToCards(CardsDto cardsDto, Cards cards) {
-        cards.setCardNumber(cardsDto.getCardNumber());
-        cards.setCardType(cardsDto.getCardType());
-        cards.setMobileNumber(cardsDto.getMobileNumber());
-        cards.setTotalLimit(cardsDto.getTotalLimit());
-        cards.setAvailableAmount(cardsDto.getAvailableAmount());
-        cards.setAmountUsed(cardsDto.getAmountUsed());
-        return cards;
-    }
-
-}
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/repository/CustomerRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.springbootmicroservice.repository;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-import java.util.Optional;
-
-
-@Repository
-public interface CustomerRepository extends JpaRepository<Customer, Long> {
-
-    Optional<Customer> findByMobileNumber(String mobileNumber);
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/impl/AccountsServiceImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,108 +0,0 @@
-package com.micronauticals.springbootmicroservice.impl;
-import com.micronauticals.springbootmicroservice.constants.AccountsConstants;
-import com.micronauticals.springbootmicroservice.dto.AccountsDto;
-import com.micronauticals.springbootmicroservice.dto.CustomerDto;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-import com.micronauticals.springbootmicroservice.entity.Customer;
-import com.micronauticals.springbootmicroservice.exceptions.CustomerAlreadyExistsException;
-import com.micronauticals.springbootmicroservice.exceptions.ResourceNotFoundException;
-import com.micronauticals.springbootmicroservice.mapper.AccountsMapper;
-import com.micronauticals.springbootmicroservice.mapper.CustomerMapper;
-import com.micronauticals.springbootmicroservice.repository.AccountsRepository;
-import com.micronauticals.springbootmicroservice.repository.CustomerRepository;
-import com.micronauticals.springbootmicroservice.service.IAccountsService;
-import lombok.AllArgsConstructor;
-import org.springframework.stereotype.Service;
-import java.util.Optional;
-import java.util.Random;
-
-
-@Service
-@AllArgsConstructor
-public class AccountsServiceImpl implements IAccountsService {
-
-    private AccountsRepository accountsRepository;
-    private CustomerRepository customerRepository;
-
-    private Accounts createdNewAccount(Customer customer){
-        Accounts newAccount = new Accounts();
-        newAccount.setCustomerId(customer.getCustomerId());
-        long randomAccNumber = 1000000000L + new Random().nextInt(900000000);
-        newAccount.setAccountNumber(randomAccNumber);
-        newAccount.setAccountType(AccountsConstants.SAVINGS);
-        newAccount.setBranchAddress(AccountsConstants.ADDRESS);
-        return newAccount;
-    }
-
-
-    @Override
-    public void createAccount(CustomerDto customerDto) {
-        Customer customer = CustomerMapper.mapToCustomer(customerDto, new Customer());
-        Optional<Customer> optionalCustomer = customerRepository.findByMobileNumber(customerDto.getMobileNumber());
-        if(optionalCustomer.isPresent()){
-            throw new CustomerAlreadyExistsException("Customer already exists with mobile number: "+customerDto.getMobileNumber());
-        }
-        Customer savedCustomer = customerRepository.save(customer);
-        accountsRepository.save(createdNewAccount(savedCustomer));
-    }
-
-    @Override
-    public CustomerDto fetchAccount(String mobileNumber) {
-        Customer customer = customerRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Customer", "mobileNumber", mobileNumber)
-        );
-        Accounts account = accountsRepository.findByCustomerId(customer.getCustomerId()).orElseThrow(
-                () -> new ResourceNotFoundException("Account", "customerId", customer.getCustomerId().toString())
-        );
-        CustomerDto customerDto = CustomerMapper.mapToCustomerDto(customer, new CustomerDto());
-        customerDto.setAccountsDto(AccountsMapper.mapToAccountsDto(account, new AccountsDto()));
-
-        return customerDto;
-    }
-
-    /**
-     * @param customerDto the customer dto
-     * @return boolean
-     */
-    @Override
-    public boolean updateAccount(CustomerDto customerDto) {
-
-        boolean isUpdated = false;
-        AccountsDto accountsDto = customerDto.getAccountsDto();
-        if(accountsDto != null){
-            Accounts account = accountsRepository.findById(accountsDto.getAccountNumber()).orElseThrow(
-                    () -> new ResourceNotFoundException("Account", "accountNumber", accountsDto.getAccountNumber().toString())
-            );
-            AccountsMapper.mapToAccounts(accountsDto, account);
-            account = accountsRepository.save(account);
-
-            Long customerId = account.getCustomerId();
-            Customer customer = customerRepository.findById(customerId).orElseThrow(
-                    () -> new ResourceNotFoundException("Customer", "customerId", customerId.toString())
-            );
-            CustomerMapper.mapToCustomer(customerDto, customer);
-            customerRepository.save(customer);
-            isUpdated = true;
-
-        }
-        return isUpdated;
-     }
-
-    /**
-     * @param mobileNumber the mobile number
-     * @return boolean
-     */
-    @Override
-    public boolean deleteAccount(String mobileNumber) {
-        boolean isDeleted = false;
-        Customer customer = customerRepository.findByMobileNumber(mobileNumber).orElseThrow(
-                () -> new ResourceNotFoundException("Customer", "mobileNumber", mobileNumber)
-        );
-
-        accountsRepository.deleteByCustomerId(customer.getCustomerId());
-        customerRepository.deleteById(customer.getCustomerId());
-        isDeleted = true;
-        return isDeleted;
-    }
-
-}
Index: V1/Accounts_Microservice/src/main/resources/application_prod.yaml
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/resources/application_prod.yaml b/V1/Accounts_Microservice/src/main/resources/application_prod.yaml
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/resources/application_prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-accounts:
-  message: "Welcome to PROD environment Accounts Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/CustomerAlreadyExistsException.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,11 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-import org.springframework.http.HttpStatus;
-import org.springframework.web.bind.annotation.ResponseStatus;
-
-
-@ResponseStatus(value = HttpStatus.BAD_REQUEST)
-public class CustomerAlreadyExistsException extends RuntimeException {
-    public CustomerAlreadyExistsException(String message) {
-        super(message);
-    }
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/exception/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,74 +0,0 @@
-package com.micronauticals.loansmicroservice.exception;
-
-import com.micronauticals.loansmicroservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-        Map<String, String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorList = ex.getBindingResult().getAllErrors();
-
-        validationErrorList.forEach((error) -> {
-            String fieldName = ((FieldError) error).getField();
-            String validationMsg = error.getDefaultMessage();
-            validationErrors.put(fieldName, validationMsg);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException(Exception exception,
-                                                                  WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.INTERNAL_SERVER_ERROR);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> handleResourceNotFoundException(ResourceNotFoundException exception,
-                                                                            WebRequest webRequest) {
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.NOT_FOUND);
-    }
-
-    @ExceptionHandler(LoanAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleLoanAlreadyExistsException(LoanAlreadyExistsException exception,
-                                                                             WebRequest webRequest){
-        ErrorResponseDto errorResponseDTO = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDTO, HttpStatus.BAD_REQUEST);
-    }
-
-}
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/repository/LoansRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.loansmicroservice.repository;
-
-import com.micronauticals.loansmicroservice.entity.Loans;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-import java.util.Optional;
-
-
-@Repository
-public interface LoansRepository extends JpaRepository<Loans, Long> {
-
-    Optional<Loans> findByMobileNumber(String mobileNumber);
-
-    Optional<Loans> findByLoanNumber(String loanNumber);
-
-}
Index: V2_Cloud_Config/cloud_config/.gitignore
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/.gitignore b/V2_Cloud_Config/cloud_config/.gitignore
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/audit/AuditAwareImpl.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.loansmicroservice.audit;
-import org.springframework.data.domain.AuditorAware;
-import org.springframework.stereotype.Component;
-import java.util.Optional;
-
-@Component("auditorAwareImpl")
-public class AuditAwareImpl implements AuditorAware<String> {
-    @Override
-    public Optional<String> getCurrentAuditor() {
-        return Optional.of("LOANS_MS");
-    }
-}
-
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/controller/LoansController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,165 +0,0 @@
-package com.micronauticals.loansmicroservice.controller;
-
-import com.micronauticals.loansmicroservice.constants.LoansConstants;
-import com.micronauticals.loansmicroservice.dto.ErrorResponseDto;
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-import com.micronauticals.loansmicroservice.dto.ResponseDto;
-import com.micronauticals.loansmicroservice.service.ILoansService;
-import io.swagger.v3.oas.annotations.Operation;
-import io.swagger.v3.oas.annotations.media.Content;
-import io.swagger.v3.oas.annotations.media.Schema;
-import io.swagger.v3.oas.annotations.responses.ApiResponse;
-import io.swagger.v3.oas.annotations.responses.ApiResponses;
-import io.swagger.v3.oas.annotations.tags.Tag;
-import jakarta.validation.Valid;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-@Tag(
-        name = "CRUD REST APIs for Loans in EazyBank",
-        description = "CRUD REST APIs in EazyBank to CREATE, UPDATE, FETCH AND DELETE loan details"
-)
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-@AllArgsConstructor
-@Validated
-public class LoansController {
-
-    private ILoansService iLoansService;
-
-    @Operation(
-            summary = "Create Loan REST API",
-            description = "REST API to create new loan inside EazyBank"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "201",
-                    description = "HTTP Status CREATED"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PostMapping("/create")
-    public ResponseEntity<ResponseDto> createLoan(@RequestParam
-                                                  @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                  String mobileNumber) {
-        iLoansService.createLoan(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(LoansConstants.STATUS_201, LoansConstants.MESSAGE_201));
-    }
-
-    @Operation(
-            summary = "Fetch Loan Details REST API",
-            description = "REST API to fetch loan details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @GetMapping("/fetch")
-    public ResponseEntity<LoansDto> fetchLoanDetails(@RequestParam
-                                                     @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                     String mobileNumber) {
-        LoansDto loansDto = iLoansService.fetchLoan(mobileNumber);
-        return ResponseEntity.status(HttpStatus.OK).body(loansDto);
-    }
-
-    @Operation(
-            summary = "Update Loan Details REST API",
-            description = "REST API to update loan details based on a loan number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PutMapping("/update")
-    public ResponseEntity<ResponseDto> updateLoanDetails(@Valid @RequestBody LoansDto loansDto) {
-
-
-        boolean isUpdated = iLoansService.updateLoan(loansDto);
-        if (isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(LoansConstants.STATUS_200, LoansConstants.MESSAGE_200));
-        } else {
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(LoansConstants.STATUS_417, LoansConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @Operation(
-            summary = "Delete Loan Details REST API",
-            description = "REST API to delete Loan details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @DeleteMapping("/delete")
-    public ResponseEntity<ResponseDto> deleteLoanDetails(@RequestParam
-                                                         @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                         String mobileNumber) {
-        boolean isDeleted = iLoansService.deleteLoan(mobileNumber);
-        if(isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(LoansConstants.STATUS_200, LoansConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(LoansConstants.STATUS_417, LoansConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-}
Index: V1/cards_microservice/src/main/resources/application.yaml
===================================================================
diff --git a/V1/cards_microservice/src/main/resources/application.yaml b/V1/cards_microservice/src/main/resources/application.yaml
deleted file mode 100644
--- a/V1/cards_microservice/src/main/resources/application.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,30 +0,0 @@
-server:
-  port: 8083
-spring:
-  datasource:
-    url: jdbc:h2:mem:testdb
-    driverClassName: org.h2.Driver
-    username: sa
-    password: ''
-  h2:
-    console:
-      enabled: true
-  jpa:
-    database-platform: org.hibernate.dialect.H2Dialect
-    hibernate:
-      ddl-auto: update
-    show-sql: true
-
-
-build:
-   version: "0.0.1"
-
-accounts:
-  message: "Welcome to Accounts Microservice"
-  contactDetails:
-    email: "pps@test.com"
-    name: "PPS-940"
-
-  onCallSupport:
-    - "123-456-7890"
-    - "098-765-4321"
Index: V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java
===================================================================
diff --git a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java b/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java
deleted file mode 100644
--- a/V1/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Data
-public class AccountsDto {
-
-    @Pattern(regexp = "(^$|[0-9]{10})", message = "Mobile number is invalid")
-    @NotEmpty(message = "Mobile number is required")
-    private Long accountNumber;
-
-    @NotEmpty(message = "Account type is required")
-    private String accountType;
-
-    @NotEmpty(message = "Branch address is required")
-    private String branchAddress;
-}
Index: V1/LoansMicroservice/src/main/resources/application_prod.yaml
===================================================================
diff --git a/V1/LoansMicroservice/src/main/resources/application_prod.yaml b/V1/LoansMicroservice/src/main/resources/application_prod.yaml
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/resources/application_prod.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-spring:
-  config:
-    activate:
-      on-profile: "prod"
-
-build:
-  version: "0.0.3"
-
-accounts:
-  message: "Welcome to PROD environment Loans Microservice"
-  contactDetails:
-    email: "production@test.com"
-    name: "Production Team"
-
-  onCallSupport:
-    - "999-456-7890"
-    - "999-765-4321"
-
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/constants/CardsConstants.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,17 +0,0 @@
-package com.micronauticals.cards_microservice.constants;
-
-public class CardsConstants {
-    private CardsConstants() {
-        // restrict instantiation
-    }
-
-    public static final String  CREDIT_CARD = "Credit Card";
-    public static final int  NEW_CARD_LIMIT = 1_00_000;
-    public static final String  STATUS_201 = "201";
-    public static final String  MESSAGE_201 = "Card created successfully";
-    public static final String  STATUS_200 = "200";
-    public static final String  MESSAGE_200 = "Request processed successfully";
-    public static final String  STATUS_417 = "417";
-    public static final String  MESSAGE_417_UPDATE= "Update operation failed. Please try again or contact Dev team";
-    public static final String  MESSAGE_417_DELETE= "Delete operation failed. Please try again or contact Dev team";
-}
Index: V2_Cloud_Config/LoansMicroservice/.gitignore
===================================================================
diff --git a/V2_Cloud_Config/LoansMicroservice/.gitignore b/V2_Cloud_Config/LoansMicroservice/.gitignore
deleted file mode 100644
--- a/V2_Cloud_Config/LoansMicroservice/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V2_Cloud_Config/cloud_config/pom.xml
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/pom.xml b/V2_Cloud_Config/cloud_config/pom.xml
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/pom.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.4.3</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.micronauticals</groupId>
-    <artifactId>cloud_config</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <name>cloud_config</name>
-    <description>cloud_config</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>21</java.version>
-        <spring-cloud.version>2024.0.0</spring-cloud.version>
-    </properties>
-    <dependencies>
-
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-config</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-config-server</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-config-monitor</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-    </dependencies>
-    <dependencyManagement>
-        <dependencies>
-            <dependency>
-                <groupId>org.springframework.cloud</groupId>
-                <artifactId>spring-cloud-starter-bus-amqp</artifactId>
-            </dependency>
-            <dependency>
-                <groupId>org.springframework.cloud</groupId>
-                <artifactId>spring-cloud-dependencies</artifactId>
-                <version>${spring-cloud.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-                <configuration>
-                    <image>
-                        <name>prabal864/java-spring:Config-Server</name>
-                    </image>
-                    <excludes>
-                        <exclude>
-                            <groupId>org.projectlombok</groupId>
-                            <artifactId>lombok</artifactId>
-                        </exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java
===================================================================
diff --git a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java b/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java
deleted file mode 100644
--- a/V2_Cloud_Config/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/controller/CardsController.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,164 +0,0 @@
-package com.micronauticals.cards_microservice.controller;
-
-import com.micronauticals.cards_microservice.constants.CardsConstants;
-import com.micronauticals.cards_microservice.dto.CardsDto;
-import com.micronauticals.cards_microservice.dto.ErrorResponseDto;
-import com.micronauticals.cards_microservice.dto.ResponseDto;
-import com.micronauticals.cards_microservice.service.ICardsService;
-import io.swagger.v3.oas.annotations.Operation;
-import io.swagger.v3.oas.annotations.media.Content;
-import io.swagger.v3.oas.annotations.media.Schema;
-import io.swagger.v3.oas.annotations.responses.ApiResponse;
-import io.swagger.v3.oas.annotations.responses.ApiResponses;
-import io.swagger.v3.oas.annotations.tags.Tag;
-import jakarta.validation.Valid;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.MediaType;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.annotation.Validated;
-import org.springframework.web.bind.annotation.*;
-
-/**
- * @author Eazy Bytes
- */
-
-@Tag(
-        name = "CRUD REST APIs for Cards in EazyBank",
-        description = "CRUD REST APIs in EazyBank to CREATE, UPDATE, FETCH AND DELETE card details"
-)
-@RestController
-@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
-@AllArgsConstructor
-@Validated
-public class CardsController {
-
-    private ICardsService iCardsService;
-
-    @Operation(
-            summary = "Create Card REST API",
-            description = "REST API to create new Card inside EazyBank"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "201",
-                    description = "HTTP Status CREATED"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    }
-    )
-    @PostMapping("/create")
-    public ResponseEntity<ResponseDto> createCard(@Valid @RequestParam
-                                                  @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                  String mobileNumber) {
-        iCardsService.createCard(mobileNumber);
-        return ResponseEntity
-                .status(HttpStatus.CREATED)
-                .body(new ResponseDto(CardsConstants.STATUS_201, CardsConstants.MESSAGE_201));
-    }
-
-    @Operation(
-            summary = "Fetch Card Details REST API",
-            description = "REST API to fetch card details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @GetMapping("/fetch")
-    public ResponseEntity<CardsDto> fetchCardDetails(@RequestParam
-                                                     @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                     String mobileNumber) {
-        CardsDto cardsDto = iCardsService.fetchCard(mobileNumber);
-        return ResponseEntity.status(HttpStatus.OK).body(cardsDto);
-    }
-
-    @Operation(
-            summary = "Update Card Details REST API",
-            description = "REST API to update card details based on a card number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @PutMapping("/update")
-    public ResponseEntity<ResponseDto> updateCardDetails(@Valid @RequestBody CardsDto cardsDto) {
-        boolean isUpdated = iCardsService.updateCard(cardsDto);
-        if(isUpdated) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(CardsConstants.STATUS_200, CardsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(CardsConstants.STATUS_417, CardsConstants.MESSAGE_417_UPDATE));
-        }
-    }
-
-    @Operation(
-            summary = "Delete Card Details REST API",
-            description = "REST API to delete Card details based on a mobile number"
-    )
-    @ApiResponses({
-            @ApiResponse(
-                    responseCode = "200",
-                    description = "HTTP Status OK"
-            ),
-            @ApiResponse(
-                    responseCode = "417",
-                    description = "Expectation Failed"
-            ),
-            @ApiResponse(
-                    responseCode = "500",
-                    description = "HTTP Status Internal Server Error",
-                    content = @Content(
-                            schema = @Schema(implementation = ErrorResponseDto.class)
-                    )
-            )
-    })
-    @DeleteMapping("/delete")
-    public ResponseEntity<ResponseDto> deleteCardDetails(@RequestParam
-                                                         @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
-                                                         String mobileNumber) {
-        boolean isDeleted = iCardsService.deleteCard(mobileNumber);
-        if(isDeleted) {
-            return ResponseEntity
-                    .status(HttpStatus.OK)
-                    .body(new ResponseDto(CardsConstants.STATUS_200, CardsConstants.MESSAGE_200));
-        }else{
-            return ResponseEntity
-                    .status(HttpStatus.EXPECTATION_FAILED)
-                    .body(new ResponseDto(CardsConstants.STATUS_417, CardsConstants.MESSAGE_417_DELETE));
-        }
-    }
-
-}
Index: V2_Cloud_Config/cloud_config/src/test/java/com/micronauticals/cloud_config/CloudConfigApplicationTests.java
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/test/java/com/micronauticals/cloud_config/CloudConfigApplicationTests.java b/V2_Cloud_Config/cloud_config/src/test/java/com/micronauticals/cloud_config/CloudConfigApplicationTests.java
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/test/java/com/micronauticals/cloud_config/CloudConfigApplicationTests.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,13 +0,0 @@
-package com.micronauticals.cloud_config;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class CloudConfigApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/exceptions/GlobalExceptionHandler.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,72 +0,0 @@
-package com.micronauticals.springbootmicroservice.exceptions;
-import com.micronauticals.springbootmicroservice.dto.ErrorResponseDto;
-import org.springframework.http.HttpHeaders;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.HttpStatusCode;
-import org.springframework.http.ResponseEntity;
-import org.springframework.validation.FieldError;
-import org.springframework.validation.ObjectError;
-import org.springframework.web.bind.MethodArgumentNotValidException;
-import org.springframework.web.bind.annotation.ControllerAdvice;
-import org.springframework.web.bind.annotation.ExceptionHandler;
-import org.springframework.web.context.request.WebRequest;
-import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;
-
-import java.time.LocalDateTime;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-
-@ControllerAdvice
-public class GlobalExceptionHandler extends ResponseEntityExceptionHandler {
-
-    @Override
-    protected ResponseEntity<Object> handleMethodArgumentNotValid(
-            MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatusCode status, WebRequest request) {
-
-        Map<String,String> validationErrors = new HashMap<>();
-        List<ObjectError> validationErrorsList = ex.getBindingResult().getAllErrors();
-
-        validationErrorsList.forEach((error) ->{
-            String fieldName = ((FieldError)error).getField();
-            String errorMessage = error.getDefaultMessage();
-            validationErrors.put(fieldName, errorMessage);
-        });
-        return new ResponseEntity<>(validationErrors, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(Exception.class)
-    public ResponseEntity<ErrorResponseDto> handleGlobalException( Exception exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.INTERNAL_SERVER_ERROR,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.INSUFFICIENT_STORAGE);
-    }
-
-    @ExceptionHandler(CustomerAlreadyExistsException.class)
-    public ResponseEntity<ErrorResponseDto> handleCustomerAlreadyExistsException( CustomerAlreadyExistsException exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.BAD_REQUEST,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.BAD_REQUEST);
-    }
-
-    @ExceptionHandler(ResourceNotFoundException.class)
-    public ResponseEntity<ErrorResponseDto> ResourceNotFoundException( ResourceNotFoundException exception, WebRequest webRequest) {
-        ErrorResponseDto errorResponseDto = new ErrorResponseDto(
-                webRequest.getDescription(false),
-                HttpStatus.NOT_FOUND,
-                exception.getMessage(),
-                LocalDateTime.now()
-        );
-        return new ResponseEntity<>(errorResponseDto, HttpStatus.NOT_FOUND);
-    }
-
-}
Index: V2_Cloud_Config/cloud_config/src/main/java/com/micronauticals/cloud_config/CloudConfigApplication.java
===================================================================
diff --git a/V2_Cloud_Config/cloud_config/src/main/java/com/micronauticals/cloud_config/CloudConfigApplication.java b/V2_Cloud_Config/cloud_config/src/main/java/com/micronauticals/cloud_config/CloudConfigApplication.java
deleted file mode 100644
--- a/V2_Cloud_Config/cloud_config/src/main/java/com/micronauticals/cloud_config/CloudConfigApplication.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,15 +0,0 @@
-package com.micronauticals.cloud_config;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.cloud.config.server.EnableConfigServer;
-
-@SpringBootApplication
-@EnableConfigServer
-public class CloudConfigApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(CloudConfigApplication.class, args);
-    }
-
-}
Index: src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java b/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/dto/AccountsDto.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,19 +0,0 @@
-package com.micronauticals.springbootmicroservice.dto;
-import jakarta.validation.constraints.NotEmpty;
-import jakarta.validation.constraints.Pattern;
-import lombok.AllArgsConstructor;
-import lombok.Data;
-
-@Data
-public class AccountsDto {
-
-    @Pattern(regexp = "(^$|[0-9]{10})", message = "Mobile number is invalid")
-    @NotEmpty(message = "Mobile number is required")
-    private Long accountNumber;
-
-    @NotEmpty(message = "Account type is required")
-    private String accountType;
-
-    @NotEmpty(message = "Branch address is required")
-    private String branchAddress;
-}
Index: V2_Cloud_Config/Accounts_Microservice/.gitignore
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/.gitignore b/V2_Cloud_Config/Accounts_Microservice/.gitignore
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/.gitignore	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,33 +0,0 @@
-HELP.md
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
Index: V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java
===================================================================
diff --git a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java b/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java
deleted file mode 100644
--- a/V1/LoansMicroservice/src/main/java/com/micronauticals/loansmicroservice/mapper/LoansMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,28 +0,0 @@
-package com.micronauticals.loansmicroservice.mapper;
-
-import com.micronauticals.loansmicroservice.dto.LoansDto;
-import com.micronauticals.loansmicroservice.entity.Loans;
-
-public class LoansMapper {
-
-    public static LoansDto mapToLoansDto(Loans loans, LoansDto loansDto){
-        loansDto.setLoanNumber(loans.getLoanNumber());
-        loansDto.setLoanType(loans.getLoanType());
-        loansDto.setMobileNumber(loans.getMobileNumber());
-        loansDto.setTotalLoan(loans.getTotalLoan());
-        loansDto.setAmountPaid(loans.getAmountPaid());
-        loansDto.setOutstandingAmount(loans.getOutstandingAmount());
-        return loansDto;
-    }
-
-    public static Loans mapToLoans(LoansDto loansDto, Loans loans) {
-        loans.setLoanNumber(loansDto.getLoanNumber());
-        loans.setLoanType(loansDto.getLoanType());
-        loans.setMobileNumber(loansDto.getMobileNumber());
-        loans.setTotalLoan(loansDto.getTotalLoan());
-        loans.setAmountPaid(loansDto.getAmountPaid());
-        loans.setOutstandingAmount(loansDto.getOutstandingAmount());
-        return loans;
-    }
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java b/V1/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cards_microservice/CardsMicroserviceApplication.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,42 +0,0 @@
-package com.micronauticals.cards_microservice;
-
-import io.swagger.v3.oas.annotations.ExternalDocumentation;
-import io.swagger.v3.oas.annotations.OpenAPIDefinition;
-import io.swagger.v3.oas.annotations.info.Contact;
-import io.swagger.v3.oas.annotations.info.Info;
-import io.swagger.v3.oas.annotations.info.License;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-/*@ComponentScans({ @ComponentScan("com.eazybytes.cards.controller") })
-@EnableJpaRepositories("com.eazybytes.cards.repository")
-@EntityScan("com.eazybytes.cards.model")*/
-@EnableJpaAuditing(auditorAwareRef = "auditAwareImpl")
-@OpenAPIDefinition(
-        info = @Info(
-                title = "Cards microservice REST API Documentation",
-                description = "EazyBank Cards microservice REST API Documentation",
-                version = "v1",
-                contact = @Contact(
-                        name = "Madan Reddy",
-                        email = "tutor@eazybytes.com",
-                        url = "https://www.eazybytes.com"
-                ),
-                license = @License(
-                        name = "Apache 2.0",
-                        url = "https://www.eazybytes.com"
-                )
-        ),
-        externalDocs = @ExternalDocumentation(
-                description = "EazyBank Cards microservice REST API Documentation",
-                url = "https://www.eazybytes.com/swagger-ui.html"
-        )
-)
-public class CardsMicroserviceApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(CardsMicroserviceApplication.class, args);
-    }
-}
\ No newline at end of file
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/mapper/AccountsMapper.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,22 +0,0 @@
-package com.micronauticals.springbootmicroservice.mapper;
-import com.micronauticals.springbootmicroservice.dto.AccountsDto;
-import com.micronauticals.springbootmicroservice.entity.Accounts;
-
-
-public class AccountsMapper {
-
-    public static AccountsDto mapToAccountsDto(Accounts accounts, AccountsDto accountsDto ){
-        accountsDto.setAccountNumber(accounts.getAccountNumber());
-        accountsDto.setAccountType(accounts.getAccountType());
-        accountsDto.setBranchAddress(accounts.getBranchAddress());
-        return accountsDto;
-    }
-
-    public static Accounts mapToAccounts(AccountsDto accountsDto, Accounts accounts){
-        accounts.setAccountNumber(accountsDto.getAccountNumber());
-        accounts.setAccountType(accountsDto.getAccountType());
-        accounts.setBranchAddress(accountsDto.getBranchAddress());
-        return accounts;
-    }
-
-}
Index: V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java
===================================================================
diff --git a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java b/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java
deleted file mode 100644
--- a/V2_Cloud_Config/Accounts_Microservice/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,18 +0,0 @@
-package com.micronauticals.springbootmicroservice;
-
-import com.micronauticals.springbootmicroservice.dto.AccountsContactInfoDto;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-@EnableJpaAuditing(auditorAwareRef = "auditAwareImpl")
-@EnableConfigurationProperties(value= AccountsContactInfoDto.class)
-public class AccountsMicroservice {
-
-    public static void main(String[] args) {
-        SpringApplication.run(AccountsMicroservice.class, args);
-    }
-
-}
Index: V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java
===================================================================
diff --git a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java b/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java
deleted file mode 100644
--- a/V1/cards_microservice/src/main/java/com/micronauticals/cardsmicroservice/repository/CardsRepository.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,16 +0,0 @@
-package com.micronauticals.cards_microservice.repository;
-
-import com.micronauticals.cards_microservice.entity.Cards;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-import java.util.Optional;
-
-@Repository
-public interface CardsRepository extends JpaRepository<Cards, Long> {
-
-    Optional<Cards> findByMobileNumber(String mobileNumber);
-
-    Optional<Cards> findByCardNumber(String cardNumber);
-
-}
\ No newline at end of file
Index: V2_Cloud_Config/docker-compose/default/docker-compose.yaml
===================================================================
diff --git a/V2_Cloud_Config/docker-compose/default/docker-compose.yaml b/V2_Cloud_Config/docker-compose/default/docker-compose.yaml
deleted file mode 100644
--- a/V2_Cloud_Config/docker-compose/default/docker-compose.yaml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,91 +0,0 @@
-services:
-
-  Config-Server:
-    image: "prabal864/java-spring:ConfigServer-S6"
-    container_name: Config_Server
-    ports:
-      - "8084:8084"
-    deploy:
-      resources:
-        limits:
-          cpus: "0.25"
-          memory: 700M
-    networks:
-      - Bank_Network
-    healthcheck:
-      test: "curl --fail http://localhost:8084/actuator/health | grep UP || exit 1"
-      interval: 10s
-      timeout: 5s
-      retries: 10
-      start_period: 10s
-
-  Account:
-    image: "prabal864/java-spring:Account-S6"
-    container_name: Account_MS
-    ports:
-      - "8081:8081"
-      -
-    depends_on:
-      Config-Server:
-        condition: service_healthy
-
-    deploy:
-      resources:
-        limits:
-            cpus: "0.25"
-            memory: 700M
-    networks:
-      - Bank_Network
-    environment:
-      SPRING_CONFIG_IMPORT: "configserver:http://Config-Server:8084"
-      SPRING_PROFILES_ACTIVE: default
-      SPRING_APPLICATION_NAME: "accounts"
-
-
-  Loan:
-    image: "prabal864/java-spring:Loans-S6"
-    container_name: Loan_MS
-    ports:
-      - "8082:8082"
-    depends_on:
-      Config-Server:
-        condition: service_healthy
-    deploy:
-      resources:
-        limits:
-          cpus: "0.25"
-          memory: 700M
-    networks:
-      - Bank_Network
-    environment:
-      SPRING_CONFIG_IMPORT: "configserver:http://Config-Server:8084"
-      SPRING_PROFILES_ACTIVE: default
-      SPRING_APPLICATION_NAME: "loans"
-
-  Cards:
-    image: "prabal864/java-spring:Cards-S6"
-    container_name: Cards_MS
-    ports:
-      - "8083:8083"
-    depends_on:
-      Config-Server:
-        condition: service_healthy
-    build:
-      context: ./cards_microservice
-      dockerfile: Dockerfile
-    deploy:
-      resources:
-        limits:
-          cpus: "0.25"
-          memory: 700M
-    networks:
-      - Bank_Network
-    environment:
-      SPRING_CONFIG_IMPORT: "configserver:http://Config-Server:8084"
-      SPRING_PROFILES_ACTIVE: default
-      SPRING_APPLICATION_NAME: "cards"
-
-networks:
-  Bank_Network:
-    driver: bridge
-
Index: src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java
===================================================================
diff --git a/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java b/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java
deleted file mode 100644
--- a/src/main/java/com/micronauticals/springbootmicroservice/AccountsMicroservice.java	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ /dev/null	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
@@ -1,15 +0,0 @@
-package com.micronauticals.springbootmicroservice;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
-
-@SpringBootApplication
-@EnableJpaAuditing(auditorAwareRef = "auditAwareImpl")
-public class AccountsMicroservice {
-
-    public static void main(String[] args) {
-        SpringApplication.run(AccountsMicroservice.class, args);
-    }
-
-}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ b/.idea/vcs.xml	(date 1742304641475)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/SpringBootMicroservice-Config.iml\" filepath=\"$PROJECT_DIR$/.idea/SpringBootMicroservice-Config.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ b/.idea/modules.xml	(date 1742304641467)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/SpringBootMicroservice-Config.iml" filepath="$PROJECT_DIR$/.idea/SpringBootMicroservice-Config.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/SpringBootMicroservice-Section-7.iml" filepath="$PROJECT_DIR$/.idea/SpringBootMicroservice-Section-7.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/V1/LoansMicroservice/pom.xml\" />\r\n        <option value=\"$PROJECT_DIR$/V1/cards_microservice/pom.xml\" />\r\n        <option value=\"$PROJECT_DIR$/V1/Accounts_Microservice/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ b/.idea/misc.xml	(date 1742304677244)
@@ -4,9 +4,10 @@
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
-        <option value="$PROJECT_DIR$/V1/LoansMicroservice/pom.xml" />
-        <option value="$PROJECT_DIR$/V1/cards_microservice/pom.xml" />
-        <option value="$PROJECT_DIR$/V1/Accounts_Microservice/pom.xml" />
+        <option value="$PROJECT_DIR$/cloud_config/pom.xml" />
+        <option value="$PROJECT_DIR$/LoansMicroservice/pom.xml" />
+        <option value="$PROJECT_DIR$/cards_microservice/pom.xml" />
+        <option value="$PROJECT_DIR$/Accounts_Microservice/pom.xml" />
       </list>
     </option>
   </component>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Annotation profile for SpringBootMicroservice\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <processorPath useClasspath=\"false\">\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar\" />\r\n        </processorPath>\r\n        <module name=\"Cards_Microservice\" />\r\n        <module name=\"Accounts_Microservice\" />\r\n        <module name=\"loansmicroservice\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"Accounts_Microservice\" options=\"-parameters\" />\r\n      <module name=\"Cards_Microservice\" options=\"-parameters\" />\r\n      <module name=\"loansmicroservice\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ b/.idea/compiler.xml	(date 1742304677239)
@@ -2,6 +2,12 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="cloud_config" />
+      </profile>
       <profile name="Annotation profile for SpringBootMicroservice" enabled="true">
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
@@ -9,7 +15,7 @@
         <processorPath useClasspath="false">
           <entry name="$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar" />
         </processorPath>
-        <module name="Cards_Microservice" />
+        <module name="cards_microservice" />
         <module name="Accounts_Microservice" />
         <module name="loansmicroservice" />
       </profile>
@@ -18,7 +24,8 @@
   <component name="JavacSettings">
     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
       <module name="Accounts_Microservice" options="-parameters" />
-      <module name="Cards_Microservice" options="-parameters" />
+      <module name="cards_microservice" options="-parameters" />
+      <module name="cloud_config" options="-parameters" />
       <module name="loansmicroservice" options="-parameters" />
     </option>
   </component>
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/V1/Accounts_Microservice/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/V1/LoansMicroservice/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/V1/cards_microservice/src/main/java\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
--- a/.idea/encodings.xml	(revision cfe947d93af657180240bc80b6d6d99e1011a6e8)
+++ b/.idea/encodings.xml	(date 1742304677247)
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="Encoding">
-    <file url="file://$PROJECT_DIR$/V1/Accounts_Microservice/src/main/java" charset="UTF-8" />
-    <file url="file://$PROJECT_DIR$/V1/LoansMicroservice/src/main/java" charset="UTF-8" />
-    <file url="file://$PROJECT_DIR$/V1/cards_microservice/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/Accounts_Microservice/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/LoansMicroservice/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cards_microservice/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/cloud_config/src/main/java" charset="UTF-8" />
   </component>
 </project>
\ No newline at end of file
