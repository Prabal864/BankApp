spring:
  application:
    name: "gatewayserver"
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8084/}

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 5s

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${SPRING_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:http://localhost:8070/realms/master/protocol/openid-connect/certs}

  data:
    redis:
      connect-timeout: 2s
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    username: ${SPRING_DATASOURCE_URL:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  metrics:
    tags:
      application: ${spring.application.name}

  info:
    env:
      enabled: true

logging:
  level:
    com:
      micronauticals:
        gateway_server: DEBUG

  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

info:
  app:
    name: "gatewayserver"
    description: "gatewayserver Microservice"
    version: "1.0.0"

resilience4j.circuitbreaker:
    configs:
        default:
            sliding-window-size: 10
            failure-rate-threshold: 50
            wait-duration-in-open-state: 10000
            permitted-number-of-calls-in-half-open-state: 3


