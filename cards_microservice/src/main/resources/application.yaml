server:
  port: 8083
spring:
  application:
    name: "cards"

  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8084/}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://host.docker.internal:3308/cards_db}
    username: ${SPRING_DATASOURCE_URL:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

  sql:
    init:
      mode: always

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    username: ${SPRING_RABBITMQ_USERNAME:guest }
    password: ${SPRING_RABBITMQ_PASSWORD:guest }

management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

info:
  app:
    name: "cards"
    description: "Cards Microservice"
    version: "1.0.0"

logging:
  level:
    com:
      cards_microservice: DEBUG
  pattern:
    level: "%5p[${spring.application.name},%X{trace_id},%X{span_id}]"
